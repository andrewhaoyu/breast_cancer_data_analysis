# load("./breast_cancer_ldsc/ONCO_ldsc_result.rda")
#load("./breast_cancer_ldsc/two-stage-model-intrinsic_subtype/meta_ldsc_result.rda")
#
#
#
##################only based on BCAC
places <- 3
intrinsic_result <- read.csv("./genetic_correlation/result/BCAC.csv ",header=F)
intrinsic_result <- read.csv("./genetic_correlation/result/BCAC.csv",header=F)
correlation.matrix <- intrinsic_result[1:5,2:6]
correlation.matrix.se <- intrinsic_result[6:10,2:6]
correlation.matrix <- correlation.matrix[c(2,5,4,3,1),c(2,5,4,3,1)]
correlation.matrix.se <- correlation.matrix.se[c(2,5,4,3,1),c(2,5,4,3,1)]
correlation.95 <- get_cor_95(correlation.matrix,correlation.matrix.se)
names <- as.character(intrinsic_result[c(2,5,4,3,1),1])
colnames(correlation.matrix) <- names
rownames(correlation.matrix) <- names
colnames(correlation.95) <- names
rownames(correlation.95) <- names
correlation.matrix.low <- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[1]]
correlation.matrix.high<- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[2]]
p.value<- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[3]]
M <- nrow(correlation.matrix)
combn.list <- combn(M,2)
n <- ncol(combn.list)
cor.vec.high <- cor.vec.low <- cor.vec <- rep(0,n)
subtypes <- rep("c",n)
names <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN")
for(i in n:1){
subtypes[i] <- paste0(names[combn.list[1,i]],
" vs ",
names[combn.list[2,i]])
cor.vec[i] <- correlation.matrix[combn.list[2,i],combn.list[1,i]]
cor.vec.low[i] <- correlation.matrix.low[combn.list[2,i],combn.list[1,i]]
cor.vec.high[i] <- correlation.matrix.high[combn.list[2,i],combn.list[1,i]]
}
subtypes.f <- factor(subtypes,levels=subtypes)
cor.data <-data.frame(subtypes.f,cor.vec,
cor.vec.low,
cor.vec.high)
cor.data <- cor.data[order(cor.data[,2]),]
cor.data[,1] <- factor(cor.data[,1],
levels=as.character(cor.data[,1]))
library(ggplot2)
ggplot(cor.data,aes(x=subtypes.f,y=cor.vec))+
geom_point(size=4)+
geom_errorbar(aes(ymax = cor.vec.high, ymin = cor.vec.low))+
theme_minimal()+  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Genetic correlation") +
ggtitle("Genetic correlation between five intrinsic subtypes")  +
theme(text = element_text(size=18),plot.title = element_text(hjust = 0.5,face = "bold"),axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold.italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))+
xlab("Intrinsic subtypes")+
scale_y_continuous(limits=c(0,1))+
coord_flip()
library(tidyverse)
library(reshape2)
library(ggplot2)
library(gplots)
library(corrplot)
pal.breaks <- seq(0.5,1,0.01)
col <- colorRampPalette(c("white","red"))(length(pal.breaks)-1)
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
paletteLength <- 50
my.color <- colorRampPalette(c("white", "dodgerblue4"))(paletteLength)
myBreaks <- c(seq(0, max(correlation.matrix), length.out=floor(paletteLength)))
colnames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN")
rownames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN")
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
corrplot.mixed(as.matrix(correlation.matrix))
ggplot(cor.data,aes(x=subtypes.f,y=cor.vec))+
geom_point(size=4)+
geom_errorbar(aes(ymax = cor.vec.high, ymin = cor.vec.low))+
theme_minimal()+  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Genetic correlation") +
ggtitle("Genetic correlation between five intrinsic subtypes")  +
theme(text = element_text(size=18),plot.title = element_text(hjust = 0.5,face = "bold"),axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold.italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))+
xlab("Intrinsic subtypes")+
scale_y_continuous(limits=c(0,1))+
coord_flip()
dev.off()
library(tidyverse)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
dev.off()
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
corrplot(as.matrix(correlation.matrix),
method = "square",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
corrplot.mixed(as.matrix(correlation.matrix))
corrplot.mixed(as.matrix(correlation.matrix),
lower.col = "black", number.cex = .7)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
corrplot.mixed(as.matrix(correlation.matrix),
lower.col = "black", number.cex = .7)
correlation.matrix
write(correlation.matrix,file="./genetic_correlation/result/BCAC_temp.csv")
write.csv(as.matrix(correlation.matrix),file="./genetic_correlation/result/BCAC_temp.csv")
correlation.matrix <- correlation.matrix[c(2,1,3,4,5),c(2,1,3,4,5)]
correlation.matrix
correlation.matrix <- correlation.matrix[c(3,2,1,4,5),c(3,2,1,4,5)]
correlation.matrix
write.csv(as.matrix(correlation.matrix),file="./genetic_correlation/result/BCAC_temp.csv")
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
png(filename="meta_heatmap_two_stage.png",width=10,heigh=10,units="in",res=600)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
# heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
#           main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
#goal: demonstrate box r in BCAC
#https://cran.r-project.org/web/packages/boxr/vignettes/boxr.html
#627lww8un9twnoa8f9rjvldf7kb56q1m
#gSKdYKLd65aQpZGrq9x4QVUNnn5C8qqm
library(boxr)
box_auth()
data <- box_read('419308975889')
data <- box_read('419308975889')
ggplot(data)+geom_bar(aes(AgeDiag1))
#goal: demonstrate box r in BCAC
#https://cran.r-project.org/web/packages/boxr/vignettes/boxr.html
#627lww8un9twnoa8f9rjvldf7kb56q1m
#gSKdYKLd65aQpZGrq9x4QVUNnn5C8qqm
library(boxr)
box_auth()
data <- box_read('419308975889')
colnames(data)
head(data[1:10,1:10])
2650*2/3
2650-150
2650-1500
(1249+367*2+80*3)/(640+1249+303+367*2+262+80*3+75)
2087-1447
640+1249+303+367*2+262+80*3+75
1249+367*2+80*3
2223/3503
z.design
z.standard
library(readr)
library(devtools)
library(CompQuadForm)
library(bc2)
data1 <- read.csv("./data/iCOGS_euro_v10_05242017.csv",header=T)
y.pheno.mis1 <- cbind(data1$Behaviour1,data1$ER_status1,data1$PR_status1,data1$HER2_status1)
colnames(y.pheno.mis1) = c("Behavior","ER","PR","HER2")
library(readr)
library(devtools)
library(CompQuadForm)
library(bc2)
library(data.table)
z.design <- matrix(c(
c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0),
c(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0)
),ncol=5)
z.design.score.baseline <- z.design[,1,drop=F]
z.design.score.casecase <- z.design[,2:ncol(z.design)]
z.trans <- matrix(c(
c(1,1,1,1,1),
c(0,1,0,0,0),
c(0,0,1,0,0),
c(0,0,0,1,0),
c(0,0,0,0,1)
),ncol = 5
)
colnames(z.design) <- c("Luminial A","Luminal B",
"Luminal B HER2Neg - Luminal A",
"HER2 Enriched - Luminal A",
"Triple Negative - Luminal A")
data1 <- fread("./data/iCOGS_euro_v10_10232017.csv",header=T)
data1 <- as.data.frame(data1)
y.pheno.mis1 <- cbind(data1$Behaviour1,data1$PR_status1,data1$ER_status1,data1$HER2_status1,data1$Grade1)
z.standard(y.pheno.mis1)
z.standard <- GenerateZstandard(y.pheno.mis1)
z.standard
colnames(y.pheno.mis1) = c("Behavior","PR","ER","HER2","Grade")
z.standard <- GenerateZstandard(y.pheno.mis1)
z.standard
y.pheno.mis1 <- cbind(data1$Behaviour1,data1$PR_status1,data1$ER_status1,data1$HER2_status1,data1$Grade1)
colnames(y.pheno.mis1) = c("Behavior","ER","PR","HER2","Grade")
z.standard <- GenerateZstandard(y.pheno.mis1)
z.standard
idx <- which((y.pheno.mis1[,2]==1|y.pheno.mis1[,3]==1)&y.pheno.mis1[,4]==0)&(y.pheno.mis1[,5]==1|y.pheno.mis1[,5]==2))
idx <- which((y.pheno.mis1[,2]==1|y.pheno.mis1[,3]==1)&y.pheno.mis1[,4]==0&(y.pheno.mis1[,5]==1|y.pheno.mis1[,5]==2))
length(idx)
287.41/2052.92
18.78/324
122.45/1041.67
39.19/1041.67
26.40/1041.67
188.04/1041.67
42711.79+771.77
918+771.77
29116+12677.79
2983/43484
1754+1217
1217/1754
655.51/976.26
772*0.7
772*0.07
5774/32378
3613/32378
1290/32378
869/32378
60000*0.17
60000*0.8
2650*12/2
48000-15900
2983*1.0249
43483*0.065
412.24/2944.58
2,944.58*3+3316.26
2944.58*3+3316.26
12150*4
maf <-  apply(discovery_snp_new$exp_freq_a1,1,function(x){
min(x,1-x)
})
178-85
32-15
getwd()
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv")
head(data)
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv",header=T)
data[1:3,1:3]
tail(data)
data[1:32,1:32]
colnames(data)
data <- data[,1:16]
head(data)
tail(data)
table(data$Opposite.direction,data$CCV_in_switched_enh)
table(data$Opposite.direction,data$ACTIVE.OFF.PRIMED)
table(data$heterogeneous.test.results,data$OFF.PRIMED)
#Goal: summary enhancer results from Jona
setwd("/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis")
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv",header=T)
data <- data[,1:16]
table(data$heterogeneous.test.results,data$OFF.PRIMED)
chisq.test(table(data$heterogeneous.test.results,data$OFF.PRIMED))
table(data$heterogeneous.test.results,data$ACTIVE.PRIMED)
chisq.test(table(data$heterogeneous.test.results,data$ACTIVE.PRIMED))
table(data$heterogeneous.test.results,data$ACTIVE.PRIMED)
chisq.test(table(data$heterogeneous.test.results,data$ACTIVE.PRIMED))
table(data$heterogeneous.test.results,data$ACTIVE.OFF)
chisq.test(table(data$heterogeneous.test.results,data$ACTIVE.PRIMED))
table(data$CCV_in_switched_enh,data$heterogeneous.test.results)
chisq.test(table(data$heterogeneous.test.results,data$ACTIVE.PRIMED))
anyswitch <- sum(data$OFF.PRIMED+data$ACTIVE.OFF+data$ACTIVE.OFF.PRIMED+data$ACTIVE.PRIMED)
anyswitch
anyswitch <- data$OFF.PRIMED+data$ACTIVE.OFF+data$ACTIVE.OFF.PRIMED+data$ACTIVE.PRIMED
anyswitch
anyswitch <- ifelse(totalswitch>=1,1,0)
totalswitch <- data$OFF.PRIMED+data$ACTIVE.OFF+data$ACTIVE.OFF.PRIMED+data$ACTIVE.PRIMED
anyswitch <- ifelse(totalswitch>=1,1,0)
anyswitch
table(anyswitch,data$heterogeneous.test.results)
table(anyswitch,data$heterogeneous.test.results)[1:2,2:3]
table(anyswitch,data$heterogeneous.test.results)[1:2,1:2]
table(anyswitch,data$heterogeneous.test.results)[1:2,1]
as.matrix(table(anyswitch,data$heterogeneous.test.results))
as.matrix(table(anyswitch,data$heterogeneous.test.results))[1,1]
chisq.test(as.matrix(table(anyswitch,data$heterogeneous.test.results)))
0.05/32
discover <- read.csv("./discovery_SNP/additive_model/result/additive_model_result.csv ")
#Goal: summary enhancer results from Jona
setwd("/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis")
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv",header=T)
data <- data[,1:16]
discover <- read.csv("./discovery_SNP/additive_model/result/additive_model_result.csv ")
discover <- read.csv("./discovery_SNP/additive_model/result/additive_model_result.csv")
discover
head(data)
colnames(discover) <- "SNP"
try <- match(data,SNP,by.x= "Rs.id",by.y = "SNP")
?match
try <- merge(data,SNP,by.x= "Rs.id",by.y = "SNP")
colnames(discover) <- "SNP"
try <- merge(data,SNP,by.x= "Rs.id",by.y = "SNP")
try <- merge(data,discover,by.x= "Rs.id",by.y = "SNP")
dim(try)
try
colnames(discover)
discover <- read.csv("./discovery_SNP/additive_model/result/additive_model_result.csv")
colnames(discover)[1] <- "SNP"
try <- merge(data,discover,by.x= "Rs.id",by.y = "SNP")
new.sig <- ifelse(try$Mixed.Model.global.heterogeneity.test.p.value..baseline.ER.fixed..1<=0.05/32,1,0)
new.sig
table(new.sig,data$Opposite.direction)
anyswitch <- ifelse(totalswitch>=1,1,0)
as.matrix(table(anyswitch,data$heterogeneous.test.results))
as.matrix(table(anyswitch,data$Opposite.direction))
table(data$Opposite.direction,data$CCV_in_switched_enh)
table(data$Opposite.direction,data$heterogeneous.test.results)
table(data$Opposite.direction,data$heterogeneous.test.results,data$CCV_in_switched_enh)
table(data$Opposite.direction,data$heterogeneous.test.results,anyswitch)
table(anyswitch,data$heterogeneous.test.results,data$Opposite.direction)
table(data$heterogeneous.test.results,anyswitch,data$Opposite.direction)
table(data$heterogeneous.test.results,data$CCV_in_switched_enh,data$Opposite.direction)
table(data$CCV_in_switched_enh,anyswitch)
table(anyswitch,data$heterogeneous.test.results)
table(data$heterogeneous.test.results,anyswitch)
anyswitch
try$CCV_in_anyswitch_enh <- anyswitch
write.csv(try,file = "./discovery_SNP/functional_analysis/result/enhancer_count_update.csv")
chisq.test(as.matrix(table(anyswitch,data$heterogeneous.test.results)))
10/17
12/15
result <- matrix("c",22,1)
result <- matrix("c",22,1)
for(i in 1:22){
result[i,1] <- paste0("wget wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr",i,".phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz")
}
result
wget()
getwd()
write.table(result,file = "./multi_ethnic/code/download_kg_vcf.sh")
write.table(result,file = "./multi_ethnic/code/download_kg_vcf.sh",row.names=F)
write.table(result,file = "./multi_ethnic/code/download_kg_vcf.sh",row.names=F,quote=F)
write.table(result,file = "./multi_ethnic/code/download_kg_vcf.sh",row.names=F,quote=F,col.names = F)
result
result <- matrix("c",22,1)
for(i in 1:22){
result[i,1] <- paste0("wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr",i,".phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz")
}
write.table(result,file = "./multi_ethnic/code/download_kg_vcf.sh",row.names=F,quote=F,col.names = F)
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv",header=T)
#Goal: summary enhancer results from Jona
setwd("/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis")
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count.csv",header=T)
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count_update.csv",header=T)
head(data)
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_count_new.csv",header=T)
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_update_new.csv",header=T)
head(data)
table(data$heterogeneous.test.results,
data$CCV_in_ANYswitched_enh)
table(table(data$heterogeneous.test.results,
data$CCV_in_ANYswitched_enh))
chisq.test(data$heterogeneous.test.results,
data$CCV_in_ANYswitched_enh)
60548*22
result <- matrix("c",22,1)
for(i in 1:22){
result[i,1] <- paste0("/spin1/users/zhangh24/plink --vcf ALL.chr",i,".phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz --out /spin1/users/zhangh24/KG.vcf/prunded_result/chr_",i)
}
result
data <- read.csv("./discovery_SNP/functional_analysis/result/enhancer_update_new.csv",header=T)
colnames(data)
chisq.test(data$heterogeneous.test.results,
data$CCV_in_ACTIVEswitched_enh)
table(data$heterogeneous.test.results,
data$CCV_in_ACTIVEswitched_enh)
42746*22
200000/22
num.snp = rep(0,22)
for(i in 1:22){
geno.file = paste0("/spin1/users/zhangh24/KG.vcf/prunded_result/chr_",i,".prune.in")
temp = system(paste0("wc -l ",geno.file),intern=T)
temp = as.numeric(gsub(geno.file,"",temp))
num.snp[i] = temp
}
?matrix
