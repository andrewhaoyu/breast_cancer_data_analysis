sum((colMeans(pred.y[[1]])-beta[2,])^2)
i <- 3
i <- 3
betahat <- beta_hat[3,]
hetersigma <- heter.sigma.est[3]
data <- list(M=M,beta0=beta0,betahat=betahat,Sigma=Sigma,
hetersigma = hetersigma)
i <- 3
betahat <- beta_hat[i,]
hetersigma <- heter.sigma.est[i]
data <- list(M=M,beta0=beta0,betahat=betahat,Sigma=Sigma,
hetersigma = hetersigma)
library(rstan)
stan.model <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> hetersigma;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ normal(beta0,hetersigma);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model)
fit1 <- sampling(smodel,
data=data,
warmup=5000,
iter=10000,
control = list(adapt_delta=0.95),
chains=4)
traceplot(fit1,pars=c('beta'))
pred.y <- extract(fit1)
sum((colMeans(pred.y[[1]])-beta[i,])^2)
sum((beta_hat[i,]-beta[i,])^2)
ebestimate <- function(logodds.subtype,
sigma.subtype,
logodds.standard,
prior.sigma
){
M <- length(logodds.subtype)
if(prior.sigma==0){
return(rep(logodds.standard,M))
}else{
result <- solve(solve(sigma.subtype)+(1/prior.sigma)*diag(M))%*%(solve(sigma.subtype)%*%logodds.subtype+
(1/prior.sigma)*rep(logodds.standard,M))
return(result)
}
}
ebestimate(betahat,Sigma,beta0,hetersigma)
colMeans(pred.y[[1]])
M <- 5
A <- matrix(rnorm(M^2,mean=0,sd=0.2),M,M)
Sigma <- A%*%t(A)
heter.sigma <- 0.3
b <- sqrt(heter.sigma/2)
M <- 5
n <- 10000
beta0 = 1
#beta <- matrix(rnorm(n*M,mean=beta0,sd=sqrt(heter.sigma)),n,M)
beta <- matrix(rlaplace(n*M,m=beta0,s=b),n,M)
library(MASS)
library(rmutil)
beta_hat <- beta
heter.sigma.est <- rep(0,n)
for(i in 1:n){
beta_hat[i,] <- mvrnorm(1,beta[i,],Sigma)
heter.sigma.est[i] <- heter.variance.estimate(beta_hat[i,],Sigma)
}
mean(heter.sigma.est)
i <- 3
betahat <- beta_hat[i,]
hetersigma <- heter.sigma.est[i]
b <- sqrt(heter.sigma/2)
b
sqrt(heter.sigma/2)
b <- sqrt(hetersigma/2)
b
data <- list(M=M,beta0=beta0,betahat=betahat,Sigma=Sigma,
b=b)
library(rstan)
stan.model2 <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> b;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ laplace(beta0,b);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model2)
stan.model2 <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> b;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ laplace(beta0,b);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model2)
stan.model2 <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> b;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ normal(beta0,b);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model2)
stan.model2 <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> b;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ laplace(beta0,b);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model2)
stan.model2 <- '
data{
//define data
int<lower=1> M;
real beta0;
vector[M] betahat;
matrix[M,M] Sigma;
real<lower=0> b;
}
parameters{
vector[M] beta;
}
model{
//prior
for(i in 1:M){
beta[i] ~ double_exponential(beta0,b);
}
//data
betahat ~ multi_normal(beta,Sigma);
}
'
smodel <- stan_model(model_code = stan.model2)
fit1 <- sampling(smodel,
data=data,
warmup=5000,
iter=10000,
control = list(adapt_delta=0.95),
chains=4)
traceplot(fit1,pars=c('beta'))
pred.y <- extract(fit1)
sum((colMeans(pred.y[[1]])-beta[i,])^2)
sum((beta_hat[i,]-beta[i,])^2)
auc_cal <- function(roc){
n <- nrow(roc)
auc <- 0
for(i in 1:(n-1)){
temp <- (roc[i+1,1]-roc[i,1])*(roc[i+1,2]+roc[i,2])/2
auc <- temp+auc
}
return(auc)
}
true.false.calculate <- function(prs,test.data){
idx.true <- which(test.data==1)
idx.false <- which(test.data==0)
n <- length(test.data)
min.prs <- range(prs)[1]
max.prs <- range(prs)[2]
cut.point <- seq(from=min.prs,to=max.prs,by=(max.prs-min.prs)/100)
true.pos <- rep(0,length(cut.point))
false.pos <- rep(0,length(cut.point))
true.pos[length(cut.point)] <- 1
false.pos[length(cut.point)] <- 1
for(i in 2:(length(cut.point)-1)){
predict.result <- ifelse(prs<cut.point[i],1,0)
temp <- table(predict.result,test.data)
true.pos[i] <- temp[2,2]/colSums(temp)[2]
false.pos[i] <- (temp[2,1])/colSums(temp)[1]
}
return(cbind(true.pos,false.pos))
}
library(data.table)
icog.data <- as.data.frame(fread("/spin1/users/zhangh24/breast_cancer_data_analysis/data/sig_snps_icog.csv",header=T))
onco.data <- as.data.frame(fread("/spin1/users/zhangh24/breast_cancer_data_analysis/data/sig_snps_onco.csv",header=T))
library(tidyverse)
y.pheno.mis1 <- select(icog.data,Behaviour1,ER_status1,PR_status1,HER2_status1,Grade1)
x.covar1 <- select(icog.data,5:14)
x.snp.all1 <- select(icog.data,26:230)
colnames(y.pheno.mis1)
y.pheno.mis2 <- select(onco.data,Behaviour1,ER_status1,PR_status1,HER2_status1,Grade1)
x.covar2 <- select(onco.data,5:14)
x.snp.all2 <- select(onco.data,26:230)
colnames(y.pheno.mis2)
idx.control1 <- which(icog.data$Behaviour1==0)
length(idx.control1)
idx.triple1 <- which(y.pheno.mis1[,2]==0&y.pheno.mis1[,3]==0&y.pheno.mis1[,4]==0)
length(idx.triple1)
idx.control2 <- which(onco.data$Behaviour1==0)
length(idx.control2)
idx.triple2 <- which(y.pheno.mis2[,2]==0&y.pheno.mis2[,3]==0&y.pheno.mis2[,4]==0)
length(idx.triple2)
#############random sample 200 cases & 200 controls from icog
#############random sample 500 cases & 500 controls from onco
n.test.control.icog <- 200
n.test.cases.icog <- 200
n.test.control.onco <- 500
n.test.cases.onco <- 500
set.seed(1)
idx.test.control.icog <- idx.control1[sample(length(idx.control1),n.test.control.icog)]
idx.test.triple.icog <- idx.triple1[sample(length(idx.triple1),n.test.cases.icog)]
idx.test1 <- c(idx.test.control.icog,idx.test.triple.icog)
y.pheno.mis1.test <- y.pheno.mis1[idx.test1,]
x.covar.test1 <- x.covar1[idx.test1,]
x.snp.all.test1 <- x.snp.all1[idx.test1,]
y.pheno.mis1.train <- y.pheno.mis1[-idx.test1,]
x.covar.train1 <- x.covar1[-idx.test1,]
x.snp.all.train1 <- x.snp.all1[-idx.test1,]
auc_cal <- function(roc){
n <- nrow(roc)
auc <- 0
for(i in 1:(n-1)){
temp <- (roc[i+1,1]-roc[i,1])*(roc[i+1,2]+roc[i,2])/2
auc <- temp+auc
}
return(auc)
}
# prior_sigma <- function(log.odds,sigma){
#   p <- ncol(sigma)
#   n <- nrow(log.odds)
#   mean.log.odds <- apply(log.odds,1,mean)
#   n.eff <- 1/sigma
#   n.eff.sum <- apply(n.eff,1,sum)
#   prior.sigma.result <- rep(0,205)
#
#   for(i in 1:n){
#     temp <- 0
#     for(j in 1:p){
#       temp <- (n.eff[i,j]/n.eff.sum[i])*(log.odds[i,j]-mean.log.odds[i])^2
#       prior.sigma.result[i] <- temp+prior.sigma.result[i]
#     }
#   }
#   prior.sigma.result <- prior.sigma.result/(p-1)
#   return(prior.sigma.result)
# }
true.false.calculate <- function(prs,test.data){
idx.true <- which(test.data==1)
idx.false <- which(test.data==0)
n <- length(test.data)
min.prs <- range(prs)[1]
max.prs <- range(prs)[2]
cut.point <- seq(from=min.prs,to=max.prs,by=(max.prs-min.prs)/100)
true.pos <- rep(0,length(cut.point))
false.pos <- rep(0,length(cut.point))
true.pos[length(cut.point)] <- 1
false.pos[length(cut.point)] <- 1
for(i in 2:(length(cut.point)-1)){
predict.result <- ifelse(prs<cut.point[i],1,0)
temp <- table(predict.result,test.data)
true.pos[i] <- temp[2,2]/colSums(temp)[2]
false.pos[i] <- (temp[2,1])/colSums(temp)[1]
}
return(cbind(true.pos,false.pos))
}
library(data.table)
icog.data <- as.data.frame(fread("/spin1/users/zhangh24/breast_cancer_data_analysis/data/sig_snps_icog.csv",header=T))
onco.data <- as.data.frame(fread("/spin1/users/zhangh24/breast_cancer_data_analysis/data/sig_snps_onco.csv",header=T))
library(tidyverse)
y.pheno.mis1 <- select(icog.data,Behaviour1,ER_status1,PR_status1,HER2_status1,Grade1)
x.covar1 <- select(icog.data,5:14)
x.snp.all1 <- select(icog.data,26:230)
colnames(y.pheno.mis1)
y.pheno.mis2 <- select(onco.data,Behaviour1,ER_status1,PR_status1,HER2_status1,Grade1)
x.covar2 <- select(onco.data,5:14)
x.snp.all2 <- select(onco.data,26:230)
colnames(y.pheno.mis2)
idx.control1 <- which(icog.data$Behaviour1==0)
length(idx.control1)
idx.triple1 <- which(y.pheno.mis1[,2]==0&y.pheno.mis1[,3]==0&y.pheno.mis1[,4]==0)
length(idx.triple1)
idx.control2 <- which(onco.data$Behaviour1==0)
length(idx.control2)
idx.triple2 <- which(y.pheno.mis2[,2]==0&y.pheno.mis2[,3]==0&y.pheno.mis2[,4]==0)
length(idx.triple2)
#############random sample 200 cases & 200 controls from icog
#############random sample 500 cases & 500 controls from onco
n.test.control.icog <- 200
n.test.cases.icog <- 200
n.test.control.onco <- 500
n.test.cases.onco <- 500
set.seed(1)
idx.test.control.icog <- idx.control1[sample(length(idx.control1),n.test.control.icog)]
idx.test.triple.icog <- idx.triple1[sample(length(idx.triple1),n.test.cases.icog)]
idx.test1 <- c(idx.test.control.icog,idx.test.triple.icog)
y.pheno.mis1.test <- y.pheno.mis1[idx.test1,]
x.covar.test1 <- x.covar1[idx.test1,]
x.snp.all.test1 <- x.snp.all1[idx.test1,]
y.pheno.mis1.train <- y.pheno.mis1[-idx.test1,]
x.covar.train1 <- x.covar1[-idx.test1,]
x.snp.all.train1 <- x.snp.all1[-idx.test1,]
?plot
?sample
Generatetestid <- function(subtypes){
set.seed(1)
M <- length(table(subtypes))
testcasesize <- rep(0,M-1)
completecasesize <- rep(0,M-2)
for(i in 2:(M-1)){
testcasesize[i-1] <- floor(table(subtypes)[i]/100)*10
completecasesize[i-1] <- table(subtypes)[i]
}
names(testcasesize) <- names(table(subtypes))[2:(M-1)]
names(completecasesize) <- names(table(subtypes))[2:(M-1)]
testcaseid <- list()
testcontrolid <- list()
n.control <- as.numeric(table(subtypes)[1])
id.control <- which(subtypes=="control")
n.control <- length(id.control)
for(i in 1:(M-2)){
id.case <- which(subtypes==names(testcasesize)[i])
testcaseid[[i]] <- id.case[sample(completecasesize[i],testcasesize[i])]
testcontrolid[[i]] <- id.control[sample(n.control,testcasesize[i])]
}
i <-i +1
for(j in 1:(M-2)){
testcaseid[[i]] <- c(testcaseid[[i]], testcaseid[[j]])
}
testcontrolid[[i]] <- id.control(sample(n.control,length(testcaseid[[i]])))
testcasesize[[i]] <- length(testcaseid[[i]])
return(list(testcaseid=testcaseid,testcontrolid=testcontrolid,subtypenames=names(testcasesize),testcasesize=testcasesize))
}
Heter.result.Icog = EMmvpolySelfDesign(y.pheno.mis1.train,x.self.design = x.snp.all.train1[,i1],z.design=z.design,baselineonly = NULL,additive = x.covar.train1,pairwise.interaction = NULL,saturated = NULL,missingTumorIndicator = 888)
install_github("andrewhaoyu/bcutility",args = c('--library="/home/zhangh24/R/x86_64-pc-linux-gnu-library/3.4"'))
60/250
14*5
?png
correlation.matrix <- read.csv("genetic_correlation_meta.csv")
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/genetic_correlation/ICOG/result/')
correlation.matrix <- read.csv("genetic_correlation_meta.csv")
correlation.matrix
correlation.matrix <- read.csv("genetic_correlation_meta.csv")
pal.breaks <- seq(-1,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
heatmap.2(correlation.matrix.icog,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
library(tidyverse)
library(reshape2)
library(ggplot2)
library(gplots)
heatmap.2(correlation.matrix.icog,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
correlation.matrix
correlation.matrix <- fread("genetic_correlation_meta.csv")
correlation.matrix
correlation.matrix <- as.data.frame(fread("genetic_correlation_meta.csv")[1:5])
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
correlation.matrix
correlation.matrix <- as.data.frame(fread("genetic_correlation_meta.csv")[,1:5])
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
correlation.matrix
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
head(x)
correlation.matrix <- as.matrix(as.data.frame(fread("genetic_correlation_meta.csv")[,1:5]))
correlation.matrix
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap ICOGs",dendrogram="row",density.info="none",lwid = c(1.5,4))
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
correlation.matrix <- as.matrix(as.data.frame(fread("genetic_correlation_meta.csv")[,1:5]))
pal.breaks <- seq(0,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
rownames(correlation.matrix) <- colnames(correlation.matrix)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
pal.breaks <- seq(0,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap.png",width=800,heigh=600,units="px",res=600)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
pal.breaks <- seq(0,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap.png",width=10,heigh=8,units="inches",res=300)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap.png",width=10,heigh=8,units="in",res=300)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
pal.breaks <- seq(-1,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap2.png",width=10,heigh=8,units="in",res=300)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
correlation.matrix <- as.matrix(as.data.frame(fread("genetic_correlation_meta.csv")[,1:5]))
rownames(correlation.matrix) <- colnames(correlation.matrix)
pal.breaks <- seq(0,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap.png",width=10,heigh=10,units="in",res=300)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
pal.breaks <- seq(-1,1,0.01)
col <- colorRampPalette(c("dodgerblue4","white","red"))(length(pal.breaks)-1)
correlation.matrix.icog <- correlation.matrix
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
png(filename="./meta_heatmap2.png",width=10,heigh=10,units="in",res=300)
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
?quantile
total1 = 8884+1503+1776+760+2057
8884/total1
1503/total1
1776/total1
760/total1
2057/total1
total2= 24199+5008+5008+2037+5121
24199/total2
5008/total2
5028/total2
2037/total2
5121/total2
total = total1+total2
(8884+24199)/total
(1503+5008)/total
(1776+5028)/total
(760+2037)/total
(2057+5121)/total
