y.pheno.mis <- cbind(status,ER.upate,PR.update,HER2.update
,Grade.update)
colnaems(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
colnames(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
try <- model.matrix(~.data$parity_cat)
try <- model.matrix(~. data$parity_cat)
try <- model.matrix(~data$parity_cat)
head(try)
try <- model.matrix(~as.factor(data$parity_cat))
head(try)
try <- model.matrix(~as.factor(data$parity_cat)-1)
head(try)
class(try)
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
data2 <- data2[-idx.remove,]
all.equal(data$BCAC_ID,data2$BCAC_ID)
status <- data$status
ER <- data2$ER_status1
ER.update <- transform(status,ER)
PR <- data2$PR_status1
PR.update <- transform(status,PR)
HER2 <- data2$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data2$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
try <- model.matrix(~as.factor(data$parity_cat)-1)
head(try)
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)
colnames(parity.mat) <- paste0("parity_cat",c(0:4))
head(parity.mat)
study.mat <- model.matrix(~as.factor(data$study)-1)
head(study.mat)
gsub(as.factor(data$study),"",colnames(study.mat))
colnames(study.mat) <- gsub("as.factor(data$study)","",colnames(study.mat))
colnames(study.mat)
gsub("as.factor(data$study)","",colnames(study.mat))
?gsub
try <- c("abd")
gsub("a","",try)
colnames(study.mat)
gsub("as.factor","",colnames(study.mat))
gsub("as.factor(data$study)","",colnames(study.mat))
gsub("as.factor(data$study","",colnames(study.mat))
gsub("as.factor(data\$study)","",colnames(study.mat))
gsub("as.factor\(data\$study\)","",colnames(study.mat))
table(datastudy)
table(data$study)
unique(data$study)
colnames(study.mat) <- unique(study)
colnames(study.mat) <- unique(data$study)
table(data$ethnicity)
ethnicity.mat <- model.matrix(~as.factor(data$ethnicity)-1)
head(ethnicity.mat)
colnames(ethnicity.mat) <- paste0("ethnicity",c(1:6))
head(ethnicity.mat)
x.covar <- cbind(parity.mat,study.mat,ethnicity.mat,refage)
refage <- data$refage
x.covar <- cbind(parity.mat,study.mat,ethnicity.mat,refage)
dim(ethnicity.mat)
dim(study.mat)
dim(parity.mat)
dim(refage)
length(refage)
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)
colnames(parity.mat) <- paste0("parity_cat",c(0:4))
dim(parity.mat)
data <- fread("./data/dataset_montse_20180522.txt")
data2 <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
data2 <- data2[-idx.remove,]
idx.remove <- which(data$parity_cat==9)
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
data2 <- data2[-idx.remove,]
all.equal(data$BCAC_ID,data2$BCAC_ID)
status <- data$status
ER <- data2$ER_status1
ER.update <- transform(status,ER)
PR <- data2$PR_status1
PR.update <- transform(status,PR)
HER2 <- data2$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data2$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
y.pheno.mis <- cbind(status,ER.upate,PR.update,HER2.update
,Grade.update)
colnames(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
length(status)
length(ER.update)
length(PR.update)
length(HER2.update)
length(Grade.update)
table)data$parity_cat
table(data$parity_cat)
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)
dim(parity.mat)
head(parity.mat)
length(data$parity_cat)
26407+31790+74680+38850+24110
table(data$parity_cat,exclude=NULL)
data <- fread("./data/dataset_montse_20180522.txt")
data2 <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
data2 <- data2[-idx.remove,]
table(data.parity_cat,exclude=NULL)
table(data$parity_cat,exclude=NULL)
table(data2$parity_cat,exclude=NULL)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
data <- data[-idx.remove,]
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
all.equal(data$BCAC_ID,data2$BCAC_ID)
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
#########remove people with missing parity_cat
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
ER <- data2$ER_status1
ER.update <- transform(status,ER)
PR <- data2$PR_status1
PR.update <- transform(status,PR)
HER2 <- data2$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data2$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
length(status)
ER <- data2$ER_status1
length(ER)
library(data.table)
library(bc2)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
#########remove people with missing parity_cat
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
ER <- data$ER_status1
ER.update <- transform(status,ER)
PR <- data$PR_status1
PR.update <- transform(status,PR)
HER2 <- data$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
y.pheno.mis <- cbind(status,ER.upate,PR.update,HER2.update
,Grade.update)
length(status)
length(ER.upate)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
rm(list=ls())
library(data.table)
library(bc2)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- rep(0,n)
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
ER <- data$ER_status1
ER.update <- transform(status,ER)
PR <- data$PR_status1
PR.update <- transform(status,PR)
HER2 <- data$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
y.pheno.mis <- cbind(status,ER.upate,PR.update,HER2.update
,Grade.update)
y.pheno.mis <- cbind(status,ER.update,PR.update,HER2.update
,Grade.update)
colnames(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)
colnames(parity.mat) <- paste0("parity_cat",c(0:4))
study.mat <- model.matrix(~as.factor(data$study)-1)
colnames(study.mat) <- unique(data$study)
ethnicity.mat <- model.matrix(~as.factor(data$ethnicity)-1)
colnames(ethnicity.mat) <- paste0("ethnicity",c(1:6))
refage <- as.madata$refage
refage <- data$refage
x.covar <- cbind(parity.mat,study.mat,ethnicity.mat,refage)
model <- TwoStageModel(y = y.pheno.mis,additive = x.covar,
missingTumorIndicator = 888)
head(y.pheno.mis)
dim(y.pheno.mis)
dim(x.covar)
model <- TwoStageModel(y = y.pheno.mis,additive = x.covar,
missingTumorIndicator = 888)
y = y.pheno.mis
y = y.pheno.mis
additive = x.covar
missingTumorIndicator = 888
missing.data.vec <- GenerateMissingPosition(y,missingTumorIndicator)
y.pheno.complete <- y[-missing.data.vec,]
dim(y.pheno.complete)
initial.set <- InitialSetup(y.pheno.complete,
baselineonly,
additive,
pairwise.interaction,
saturated
)
y <- y.pheno.complete
tumor.number <- ncol(y)-1
y.case.control <- y[,1]
y.tumor <- y[,2:(tumor.number+1)]
freq.subtypes <- GenerateFreqTable(y.pheno.complete)
freq.subtypes
head(y.pheno.complete)
head(missing.data.vec)
head(y.pheno.mis)
sum(y.pheno.complete)
sum(y.pheno.complete[,1])
dim(y.pheno.complete)
GenerateFreqTable
freq.subtypes <- GenerateFreqTable(y.pheno.complete)
freq.sutbypees
freq.subtypes
table(y.pheno.complete[,2],y.pheno.complete[,3])
table(Grade.update)
library(data.table)
library(bc2)
#data <- fread("./data/dataset_montse_20180522.txt")
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- tumor
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
#########remove people with missing parity_cat
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
ER <- data$ER_status1
ER.update <- transform(status,ER)
PR <- data$PR_status1
PR.update <- transform(status,PR)
HER2 <- data$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
y.pheno.mis <- cbind(status,ER.update,PR.update,HER2.update
,Grade.update)
colnames(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)
colnames(parity.mat) <- paste0("parity_cat",c(0:4))
study.mat <- model.matrix(~as.factor(data$study)-1)
colnames(study.mat) <- unique(data$study)
ethnicity.mat <- model.matrix(~as.factor(data$ethnicity)-1)
colnames(ethnicity.mat) <- paste0("ethnicity",c(1:6))
refage <- data$refage
x.covar <- cbind(parity.mat,study.mat,ethnicity.mat,refage)
model <- TwoStageModel(y = y,additive = x.covar,
missingTumorIndicator = 888)
model <- TwoStageModel(y = y.pheno.mis,additive = x.covar,
missingTumorIndicator = 888)
#study.mat
model <- TwoStageModel(y = y.pheno.mis,baselineonly = study.mat,additive = x.covar,
missingTumorIndicator = 888)
(1100+60-59.82)/2
library(multinom)
install.packages("multimom")
install.packages("multinom")
install.packages("multinom")
library(nnet)
y <- rep(c(1,2,3),100)
x <- rnorm(300)
model <- multinom(y~x)
model
model$convergence
library(data.table)
library(bc2)
#data <- fread("./data/dataset_montse_20180522.txt")
setwd('/spin1/users/zhangh24/breast_cancer_data_analysis')
data <- fread("./data/dataset_montse_20180524.txt")
transform <- function(status,tumor){
n <- length(status)
result <- tumor
idx.mis <- which(status==1&is.na(tumor))
result[idx.mis] <- 888
idx.control <- which(status==0)
result[idx.control] <- NA
return(result)
}
##########remove status 2 in-situ
##########remove status 3 unknown people
idx.remove <- which(data$status==2|data$status==3)
data <- data[-idx.remove,]
idx.remove <- which(data$parity_cat==9)
data <- data[-idx.remove,]
status <- data$status
ER <- data$ER_status1
ER.update <- transform(status,ER)
PR <- data$PR_status1
PR.update <- transform(status,PR)
HER2 <- data$HER2_status1
HER2.update <- transform(status,HER2)
Grade <- data$Grade1
Grade.update <- transform(status,Grade)
table(data$parity_cat)
table(data$study)
table(data$ethnicity)
table(data$refage)
y.pheno.mis <- cbind(status,ER.update,PR.update,HER2.update
,Grade.update)
colnames(y.pheno.mis) <- c("casecon","ER","PR","HER","Grade")
parity.mat <- model.matrix(~as.factor(data$parity_cat)-1)[,-1]
colnames(parity.mat) <- paste0("parity_cat",c(1:4))
study.mat <- model.matrix(~as.factor(data$study)-1)[,-1]
colnames(study.mat) <- unique(data$study)[-1]
ethnicity.mat <- model.matrix(~as.factor(data$ethnicity)-1)[,-1]
colnames(ethnicity.mat) <- paste0("ethnicity",c(1:6))[-1]
refage <- data$refage
x.covar <- cbind(parity,ethnicity.mat,refage)
parity <- data$parity_cat
table(parity)
x.covar <- cbind(parity,ethnicity.mat,refage)
x.covar <- cbind(parity_mat,ethnicity.mat,refage)
#parity.mat,
#,
model <- TwoStageModel(y = y.pheno.mis,
#baselineonly = study.mat,
additive = x.covar,
missingTumorIndicator = 888)
parity <- data$parity_cat
x.covar <- cbind(parity,ethnicity.mat,refage)
model <- TwoStageModel(y = y.pheno.mis,
#baselineonly = study.mat,
additive = x.covar,
missingTumorIndicator = 888)
parity <- data$parity_cat
x.covar <- cbind(parity,ethnicity.mat,refage)
model.lin <- TwoStageModel(y = y.pheno.mis,
#baselineonly = study.mat,
additive = x.covar,
missingTumorIndicator = 888)
model[[4]]
model[[4]]
library(xlsx)
library(rJava)
model[[5]]
model[[7]]
write.csv(model[[4]],file="./risk_factor/result/risk_factor_parity_linear_second.csv")
write.csv(model[[5]],file="./risk_factor/result/risk_factor_parity_linear_second_global.csv")
head(data)
table(data$design)
table(data$design_cat)
51878+ 53711
idx.pop <- which(data$design_cat==0)
x.covar <- cbind(parity.mat,ethnicity.mat,refage)
model2 = EMmvpolySelfDesign(y.pheno.mis[idx.pop,],x.self.design = x.covar[idx.pop,],z.design=z.design,
baselineonly = NULL,additive =NULL,pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888)
z.design <- matrix(c(
c(0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0),
c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0),
c(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0)
),ncol=5)
colnames(z.design) <- c("Luminial A","Luminal B",
"Luminal B HER2-",
"HER2 Enriched",
"Triple Negative")
idx.pop <- which(data$design_cat==0)
x.covar <- cbind(parity.mat,ethnicity.mat,refage)
model2 = EMmvpolySelfDesign(y.pheno.mis[idx.pop,],x.self.design = x.covar[idx.pop,],z.design=z.design,
baselineonly = NULL,additive =NULL,pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888)
model2[[4]]
library(rJava)
install.packages("rJava")
library(rJava)
