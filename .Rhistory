for(i in 1:length(names.subtypes)){
for(j in 1:length(method.names)){
auc.out[ind] <- auc.result %>% filter(subtypes==names.subtypes[i]&
method==method.names[j]) %>%
select(auc) %>%
max
method.out[ind] <- method.names[j]
subtypes.out[ind] <- names.subtypes[i]
ind <- ind + 1
}
}
result.temp <- data.frame(method.out,subtypes.out,auc.out)
colnames(result.temp) <- c("method","subtypes","auc")
auc.table <- NULL
auc.table <- NULL
result.temp
result.temp
n.method <- 3
n.subtypes <- 5
auc.table <- matrix(result.temp,n.subtypes,n.method,byrow=T)
auc.table
auc.table <- matrix(result.temp[,3],n.subtypes,n.method,byrow=T)
auc.table
row.names(auc.table) <- names.subtypes
colnames(auc.table) <- method.names
auc.table
auc.result
auc.table
write.csv(auc.table,"./risk_prediction/LD_clumping/result/auc.table")
write.csv(auc.table,"./risk_prediction/LD_clumping/result/auc.table.csv")
i <- j <- 1
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
auc.temp
plot(as.factor(auc.temp$p),auc.temp$auc))
plot(as.factor(auc.temp$p),auc.temp$auc)
plot(as.factor(auc.temp$p),auc.temp$auc)
theme_Publication <- function(base_size=14, base_family="") {
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_line(colour="#f0f0f0"),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic",size=10),
legend.text = element_text(size = 10),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
scale_fill_Publication <- function(...){
discrete_scale("fill","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
scale_colour_Publication <- function(...){
library(scales)
discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size =3 )
library(ggplot2)
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size =3 )
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()
library(ggplot2)
library(gridExtra)
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()
theme_Publication <- function(base_size=14, base_family="") {
(theme(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_line(colour="#f0f0f0"),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic",size=10),
legend.text = element_text(size = 10),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
scale_fill_Publication <- function(...){
discrete_scale("fill","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
scale_colour_Publication <- function(...){
library(scales)
discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()
library(ggthemes)
install.packages("ggthemes")
install.packages("ggthemes")
install.packages("ggthemes")
install.packages("ggthemes")
theme_foundation <- function(base_size=12, base_family="") {
thm <- theme_grey(base_size = base_size, base_family = base_family)
for (i in names(thm)) {
if ("colour" %in% names(thm[[i]])) {
thm[[i]]["colour"] <- list(NULL)
}
if ("fill" %in% names(thm[[i]])) {
thm[[i]]["fill"] <- list(NULL)
}
}
thm + theme(panel.border = element_rect(fill = NA),
legend.background = element_rect(colour = NA),
line = element_line(colour = "black"),
rect = element_rect(fill = "white", colour = "black"),
text = element_text(colour = "black"))
}
theme_Publication <- function(base_size=14, base_family="") {
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="black"),
axis.ticks = element_line(),
panel.grid.major = element_line(colour="#f0f0f0"),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic",size=10),
legend.text = element_text(size = 10),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
scale_fill_Publication <- function(...){
discrete_scale("fill","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
scale_colour_Publication <- function(...){
library(scales)
discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()
library(ggplot2)
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()
ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))
multiplot
?multiplot
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))
p.temp
temp <- 1
plot.list[[temp]] <- p.temp
plot.list <- list()
temp <- 1
plot.list[[temp]] <- p.temp
i <- 1
temp <- 1
for(j in 1:length(method.names)){
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))
plot.list[[temp]] <- p.temp
temp <- temp+1
}
library(dplyr)
library(ggplot2)
for(j in 1:length(method.names)){
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))
plot.list[[temp]] <- p.temp
temp <- temp+1
}
grid.arrange(plot.list[[1]],plot.list[[2]],plot.list[[3]],
nrow=1)
library(gridExtra)
grid.arrange(plot.list[[1]],plot.list[[2]],plot.list[[3]],
nrow=1)
source("./plot_support/publication_theme.R")
source("./plot_support/publish_theme.R")
?png
i <- 1
temp <- 1
for(j in 1:length(method.names)){
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
plot.list[[temp]] <- p.temp
temp <- temp+1
}
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
temp <- 1
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
?png
?png
i <- 1
png(filename = paste0("./risk_prediction/LD_clumping/result/",names.subtypes[i]),
width=35,height=25,res=300,units="cm")
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
dev.off()
png(filename = paste0("./risk_prediction/LD_clumping/result/",names.subtypes[i],".png"),
width=35,height=25,res=300,units="cm")
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
dev.off()
png(filename = paste0("./risk_prediction/LD_clumping/result/",names.subtypes[i],".png"),
width=40,height=20,res=300,units="cm")
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
dev.off()
temp <- 1
for(i in 1:length(names.subtypes)){
for(j in 1:length(method.names)){
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
plot.list[[temp]] <- p.temp
temp <- temp+1
}
}
temp <- 1
for(i in 1:length(names.subtypes)){
png(filename = paste0("./risk_prediction/LD_clumping/result/",names.subtypes[i],".png"),
width=40,height=20,res=300,units="cm")
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
dev.off()
temp <- temp+3
}
auc.result
head(data1)
dim(data1)
library(dplyr)
#-------------------------------------------------------------------
# Update Date: 11/24/2018
# Create Date: 11/24/2018
# Goal: analyze auc
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
load("./risk_prediction/LD_clumping/result/auc.result.rdata")
head(auc.result)
#-------------------------------------------------------------------
# Update Date: 11/24/2018
# Create Date: 11/24/2018
# Goal: analyze auc
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
load("./risk_prediction/LD_clumping/result/auc.result.rdata")
head(auc.result)
auc.result %>% filter(subtypes=="Luminal_B")
names.subtypes <- c("Luminal_A",
"Luminal_B",
"Luminal_B_HER2Neg",
"HER2Enriched",
"TripleNeg")
method.names <- c("standard","two-stage","eb")
total <- length(names.subtypes)*length(method.names)
method.out <- rep("c",total)
subtypes.out <- rep("c",total)
auc.out <- rep(0,total)
ind <- 1
for(i in 1:length(names.subtypes)){
for(j in 1:length(method.names)){
auc.out[ind] <- auc.result %>% filter(subtypes==names.subtypes[i]&
method==method.names[j]) %>%
select(auc) %>%
max
method.out[ind] <- method.names[j]
subtypes.out[ind] <- names.subtypes[i]
ind <- ind + 1
}
}
result.temp <- data.frame(method.out,subtypes.out,auc.out)
colnames(result.temp) <- c("method","subtypes","auc")
n.method <- 3
n.subtypes <- 5
auc.table <- matrix(result.temp[,3],n.subtypes,n.method,byrow=T)
row.names(auc.table) <- names.subtypes
colnames(auc.table) <- method.names
auc.table
auc.result
(1100+59.99-54.92)/2
552+50
41/327
48*286/41/289
41/286
(41/327)/(48/337)
1/(41/327)/(48/337)
1/((41/327)/(48/337))
48/664
89/664
load("./risk_prediction/LD_clumping/result/auc.result.rdata")
head(auc.result)
auc.result %>% filter(subtypes=="Luminal_B")
names.subtypes <- c("Luminal_A",
"Luminal_B",
"Luminal_B_HER2Neg",
"HER2Enriched",
"TripleNeg")
load("./risk_prediction/LD_clumping/result/auc.result.rdata")
head(auc.result)
auc.result %>% filter(subtypes=="Luminal_B")
names.subtypes <- c("Luminal_A",
"Luminal_B",
"Luminal_B_HER2Neg",
"HER2Enriched",
"TripleNeg")
#-------------------------------------------------------------------
# Update Date: 11/24/2018
# Create Date: 11/24/2018
# Goal: analyze auc
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
library(dplyr)
load("./risk_prediction/LD_clumping/result/auc.result.rdata")
head(auc.result)
auc.result %>% filter(subtypes=="Luminal_B")
names.subtypes <- c("Luminal_A",
"Luminal_B",
"Luminal_B_HER2Neg",
"HER2Enriched",
"TripleNeg")
method.names <- c("standard","two-stage","eb")
total <- length(names.subtypes)*length(method.names)
method.out <- rep("c",total)
subtypes.out <- rep("c",total)
auc.out <- rep(0,total)
ind <- 1
for(i in 1:length(names.subtypes)){
for(j in 1:length(method.names)){
auc.out[ind] <- auc.result %>% filter(subtypes==names.subtypes[i]&
method==method.names[j]) %>%
select(auc) %>%
max
method.out[ind] <- method.names[j]
subtypes.out[ind] <- names.subtypes[i]
ind <- ind + 1
}
}
result.temp <- data.frame(method.out,subtypes.out,auc.out)
colnames(result.temp) <- c("method","subtypes","auc")
n.method <- 3
n.subtypes <- 5
auc.table <- matrix(result.temp[,3],n.subtypes,n.method,byrow=T)
row.names(auc.table) <- names.subtypes
colnames(auc.table) <- method.names
"TripleNeg")auc.table
auc.table
auc.result
auc.table <- matrix(result.temp[,3],n.subtypes,n.method,byrow=T)
row.names(auc.table) <- names.subtypes
colnames(auc.table) <- method.names
write.csv(auc.table,"./risk_prediction/LD_clumping/result/auc.table.csv")
source("./plot_support/publish_theme.R")
plot.list <- list()
temp <- 1
library(dplyr)
library(ggplot2)
library(gridExtra)
temp <- 1
for(i in 1:length(names.subtypes)){
for(j in 1:length(method.names)){
auc.temp <- auc.result %>% filter(method==method.names[j]&
subtypes==names.subtypes[i])
p.temp <- ggplot(auc.temp,aes(as.factor(p),auc))+geom_point(size=3)+scale_colour_Publication()+theme_Publication()+
xlab("p-value")+
ylab("auc")+
ggtitle(paste0(names.subtypes[i],"_",method.names[j]))+
theme(axis.text.x = element_text(angle = 75, hjust = 1))
plot.list[[temp]] <- p.temp
temp <- temp+1
}
}
temp <- 1
for(i in 1:length(names.subtypes)){
png(filename = paste0("./risk_prediction/LD_clumping/result/",names.subtypes[i],".png"),
width=40,height=20,res=300,units="cm")
grid.arrange(plot.list[[temp]],plot.list[[temp+1]],plot.list[[temp+2]],
nrow=1)
dev.off()
temp <- temp+3
}
require(GenABEL.data)
data(srdta)
pex <- summary(gtdata(srdta))[,"Pexact"]
estlambda(pex, plot=TRUE)
estlambda(pex, method="regression", proportion = 0.95)
estlambda(pex, method="median")
estlambda(pex, method="KS")
a <- qtscore(bt,srdta)
lambda(a)
install.pakcages("GenABEL")
install.package("GenABEL")
install.packages("GenABEL")
library(dplry)
new.chr.pos = new_discovery_snp %>%
mutate(paste0(CHR,":",Pos))
48+36.2-25.2+12.9-5.4x1.6x1.6
48+36.2-25.2+12.9-5.4x1.6x1.6
48+36.2-25.2+12.9-5.4*1.6*1.6
getwd()
#-------------------------------------------------------------------
# Update Date: 12/10/2018
# Goal: merge discovery additive and intrinsic results together
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
additive <- read.csv("./discovery_SNP/additive_model/result/additive_model_final.csv ")
#-------------------------------------------------------------------
# Update Date: 12/10/2018
# Goal: merge discovery additive and intrinsic results together
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
additive <- read.csv("./discovery_SNP/additive_model/result/additive_model_final.csv")
additive
intrinsic <- read.csv("./discovery_SNP/additive_model/result/intrinsic_subtype_final.csv")
intrinsic
colnames(additive)[1] <- "rs_id"
library(drplyr)
library(dplyr)
combind <- left_join(additive,intrinsic)
dim(additive)
dim(intrinsic)
#-------------------------------------------------------------------
# Update Date: 12/10/2018
# Goal: merge discovery additive and intrinsic results together
# Author: Haoyu Zhang
#-------------------------------------------------------------------
#---------------------------------------#---------------------------------------
additive <- read.csv("./discovery_SNP/additive_model/result/additive_model_final.csv")
intrinsic <- read.csv("./discovery_SNP/additive_model/result/intrinsic_subtype_final.csv")
colnames(additive)[1] <- "rs_id"
library(dplyr)
combind <- left_join(additive,intrinsic)
combind
write.csv(combind,file= "./discovery_SNP/additive_model/result/discovery_snp_summary_121118.csv")
combind.2 <- combind[1:15,]
combind.2
colnames(combind.2)
combind.2[,c(21,23,25,27,29)]
combind.2.p <- combind.2[,c(21,23,25,27,29)]
combind.2.p
apply(combind.2.p,1,min)
apply(combind.2.p,1,which.min)
z.design <- z.design[,c(1,4,5)]
setwd("/spin1/users/zhangh24/breast_cancer_data_analysis/")
setwd("/spin1/users/zhangh24/breast_cancer_data_analysis/")
library(readr)
library(devtools)
library(CompQuadForm)
library(bc2)
setwd("/spin1/users/zhangh24/breast_cancer_data_analysis/")
library(readr)
library(devtools)
library(CompQuadForm)
library(bc2)
