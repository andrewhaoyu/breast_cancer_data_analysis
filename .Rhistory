log10P[9] <- NA
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= log10P)
log10P
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
log10P
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= log10P[1:9])
LDP.result[[1]]
LDP.result[[3]]
i <- 1
pop <- c("European",
"African",
"Latino")
png(paste0("./multi_ethnic/result/prediction_",pop[i]),width = 20, height=20,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," people")+
scale_x_discrete(limit= log10P[1:9])
})
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," population")+
scale_x_discrete(limit= log10P[1:9])
})
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," population")+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result on ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result on ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
png(paste0("./multi_ethnic/result/prediction_",pop[i]),width = 20, height=20,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=15,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
20*0.618
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
r2.test
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
i <- 3
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
r2.test
n.snp.result
log10P
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
vad.r2
#goal: weighted combination of PRS methods
setwd('/spin1/users/zhangh24/breast_cancer_data_analysis')
cov(beta_train1,beta_train2)
#goal: plot prediction results
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/')
library(ggplot2)
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_summary",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
i <- 1
load(paste0("./multi_ethnic/result/LDP.result_summary_",i))
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- LDP.result[[1]]
n.snp.result
n.snp.result[i,] <- round(LDP.result[[1]],0)
n.snp.result
prop.result[i,] <- round(LDP.result[[2]],2)
LDP.result[[3]]
LDP.result[[4]]
LDP.result[[5]]
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
vad.r2
#goal: plot prediction results
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/')
library(ggplot2)
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
i <- 1
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
head(n.snp.mat)
setwd('/spin1/users/zhangh24/breast_cancer_data_analysis')
n.s <- 100
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
n.p <- length(p.thr)
n.snp.mat <- matrix(0,n.s,n.p)
prop.mat <- matrix(0,n.s,n.p)
r2.test.mat <- matrix(0,n.s,n.p)
r2.vad.mat <- matrix(0,n.s,n.p)
#the best testing threshold adjusted r2 on validation data
best.vad <- rep(0,n.s)
best.vad
vad.r2
#Goal: Create heatmap for discovery snp
setwd("/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/")
data <- read.csv("./discovery_SNP/additive_model/result/additive_model_result.csv",header=T)
head(data)
colnames(data)
head(data)
qnorm(data$ER.main.effect.P_Value)
p <- data$ER.main.effect.P_Value
abs(qnorm(2*p))
qnorm(2*p)
p
abs(qnorm(p/2))
new.result <- matrix(0,nrow(data),4)
n.tu <- 4
new.result <- matrix(0,nrow(data),n.tu)
colnames(data)
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
new.result[,i] <- abs(qnorm(5+2(i-1)))
}
n.tu <- 4
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
p <- data[,5+2(i-1)]
new.result[,i] <- GetZfun(p)
}
GetZfun <- function(p){
return(abs(qnorm(p/2)))
}
n.tu <- 4
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
p <- data[,5+2(i-1)]
new.result[,i] <- GetZfun(p)
}
p
GetZfun(p)
new.result
new.result[,i] <- GetZfun(p)
n.tu <- 4
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
p <- data[,5+2(i-1)]
new.result[,i] <- GetZfun(p)
}
i
p
p <- data[,5+2(i-1)]
n.tu <- 4
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
new.result
data
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
heter.p <- data[,22]
heter.p
new.result <- data.frame(snp,new.result,
heter.p)
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
new.result <- data.frame(snp,new.result,
heter.p)
new.result
n.tu <- 4
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
heter.p <- data[,22]
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
new.result <- data.frame(snp,new.result,
heter.p)
new.result
GetZfun <- function(p){
return(abs(qnorm(p/2)))
}
n.tu <- 4
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
heter.p <- data[,22]
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
heatmap(new.result)
rownames(new.result) <- snp
heatmap(new.result)
GetZfun <- function(p){
return((qnorm(p/2)))
}
n.tu <- 4
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
heter.p <- data[,22]
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
rownames(new.result) <- snp
heatmap(new.result)
new.result
GetZfun <- function(p){
return(abs(qnorm(p/2)))
}
n.tu <- 4
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
heter.p <- data[,22]
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
rownames(new.result) <- snp
heatmap(new.result)
heatmap.2(new.result)
72-40
800/60
41793.79-13595.79
2944.58/30*17
2944.58*2+2944.58/31*17
552.71/30*2
552.71/15*2
552.71/16*2
7503.93+552.71*5+69.09
library(tidyverse)
library(ComplexHeatmap)
install.packages("ComplexHeatmap")
#library(ComplexHeatmap)
library(colorspace)
library(circlize)
#library(xlsx)
library(readxl)
library(data.table)
GetZfun <- function(p){
return(abs(qnorm(p/2)))
}
n.tu <- 4
snp <- data[,1]
new.result <- matrix(0,nrow(data),n.tu)
heter.p <- data[,22]
for(i in 1:n.tu){
p <- data[,5+2*(i-1)]
new.result[,i] <- GetZfun(p)
}
colnames(new.result) <- c("ER_z","PR_z",
"HER2_z","grade_z")
rownames(new.result) <- snp
Heatmap(pvalue_data,
cluster_columns= FALSE,
show_row_names = TRUE,
row_names_side = "right",
row_dend_side = "left",
row_names_gp=gpar(cex=fontsize),
row_dend_width = unit(3, "cm"),
colorRamp2(c(1.281552, 1.959964, 6.10941), c("mistyrose3", "thistle1", "darkred")),
heatmap_legend_param =list(color_bar =  "continuous", labels_gp = gpar(fontsize = 8), at = c(6.10941, 5.326724, 4.417173, 3.290527, 1.644854, 1.281552),
labels = c("5.0x10-10", "5.0x10-8", "5.0x10-6", "5.0x10-4", "0.05", "0.20")))
heatmap.2(pvalue_data,
cluster_columns= FALSE,
show_row_names = TRUE,
row_names_side = "right",
row_dend_side = "left",
row_names_gp=gpar(cex=fontsize),
row_dend_width = unit(3, "cm"),
colorRamp2(c(1.281552, 1.959964, 6.10941), c("mistyrose3", "thistle1", "darkred")),
heatmap_legend_param =list(color_bar =  "continuous", labels_gp = gpar(fontsize = 8), at = c(6.10941, 5.326724, 4.417173, 3.290527, 1.644854, 1.281552),
labels = c("5.0x10-10", "5.0x10-8", "5.0x10-6", "5.0x10-4", "0.05", "0.20")))
heatmap.2(new.result)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
install.github("jokergoo/ComplexHeatmap")
library(devtools)
install.github("jokergoo/ComplexHeatmap")
install_github("jokergoo/ComplexHeatmap")
#install_github("jokergoo/ComplexHeatmap")
library(ComplexHeatmap)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
install.packages("BiocManager")
