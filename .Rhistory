}
colnames(second.stage.mat) <- covar.names
rownames(second.stage.mat) <- full.second.stage.names[1:max.number.second.stage.parameter]
second.stage.mat
load_all("/Users/zhangh24/GoogleDrive/bc2")
Heter.result.G.Icog = EMmvpoly(y.pheno.mis1,baselineonly = NULL,additive = NULL,pairwise.interaction = x.all.mis1,saturated = NULL,missingTumorIndicator = 888)
Heter.result.G.Icog[[1]]
Heter.result.G.Icog[[2]]
Heter.result.G.Icog[[3]]
Heter.result.G.Icog = EMmvpoly(y.pheno.mis1,baselineonly = NULL,additive = x.all.mis1[,1],pairwise.interaction = x.all.mis1[,2:11],saturated = NULL,missingTumorIndicator = 888)
traceback()
Heter.result.G.Icog = EMmvpoly(y.pheno.mis1,baselineonly = NULL,additive = NULL,pairwise.interaction = NULL,saturated = x.all.mis1,missingTumorIndicator = 888)
Heter.result.G.Icog[[3]]
baselineonly = NULL
additive = x.all.mis1[,1]
pairwise.interaction = x.all.mis1[,2:3]
saturated = x.all.mis1[,4:5]
missingTumorIndicator = 888
y = y.pheno.mis1
tumor.number <- ncol(y)-1
y.case.control <- y[,1]
y.tumor <- y[,2:(tumor.number+1)]
y.pheno.complete <- GenerateCompleteYPheno(y,missingTumorIndicator)
freq.subtypes <- GenerateFreqTable(y.pheno.complete)
if(CheckControlTumor(y.case.control,y.tumor)==1){
return(print("ERROR:The tumor characteristics for control subtypes should put as NA"))
}
tumor.names <- colnames(y.tumor)
if(is.null(tumor.names)){
tumor.names <- paste0(c(1:tumor.number))
}
tumor.character.cat = GenerateTumorCharacterCat(y.pheno.complete)
z.design.baselineonly <- GenerateZDesignBaselineonly(tumor.character.cat,
tumor.number,
tumor.names,
freq.subtypes)
z.design.additive <- GenerateZDesignAdditive(tumor.character.cat,
tumor.number,
tumor.names,
freq.subtypes)
z.design.pairwise.interaction <- GenerateZDesignPairwiseInteraction(tumor.character.cat,
tumor.number,
tumor.names,
freq.subtypes)
z.design.saturated <- GenerateZDesignSaturated(tumor.character.cat,
tumor.number,
tumor.names,
freq.subtypes)
full.second.stage.names <- colnames(z.design.saturated)
covar.names <- GenerateCovarName(baselineonly,
additive,
pairwise.interaction,
saturated)
z.all <- ZDesigntoZall(baselineonly,
additive,
pairwise.interaction,
saturated,
z.design.baselineonly,
z.design.additive,
z.design.pairwise.interaction,
z.design.saturated)
delta0 <-StartValueFunction(freq.subtypes,y.case.control,z.all)
#x.all has no intercept yet
#we will add the intercept in C code
x.all <- GenerateXAll(y,baselineonly,additive,pairwise.interaction,saturated)
y <- as.matrix(y)
x.all <- as.matrix(x.all)
z.standard <- z.design.additive[,-1]
M <- as.integer(nrow(z.standard))
p.main <- ncol(z.standard)+1
EM.result = EMStep(delta0,as.matrix(y),x.all,z.standard,z.all,missingTumorIndicator)
delta <- EM.result$delta
infor <- EM.result$infor_obs
complete.loglikelihood <- EM.result$complete.loglikelihood
complete.loglikelihood.aic <- EM.result$complete.loglikelihood.aic
loglikelihood.for.complete <- EM.result$loglikelihood.for.complete
loglikelihood.for.complete.aic <- EM.result$loglikelihood.for.complete.aic
second.stage.mat <-
GenerateSecondStageMat(baselineonly,
additive,
pairwise.interaction,
saturated,
M,
full.second.stage.names,
covar.names,
delta,
z.design.additive,
z.design.pairwise.interaction,
z.design.saturated)
baselineonly.number <- CountCovarNumber(baselineonly)
additive.number <- CountCovarNumber(additive)
pairwise.interaction.number <- CountCovarNumber(pairwise.interaction)
saturated.number <- CountCovarNumber(saturated)
###second.stage.category for different model structures
baselineonly.second.cat <- 1
additive.second.cat <- ncol(z.design.additive)
pairwise.interaction.second.cat <- ncol(z.design.pairwise.interaction)
saturated.second.cat <- ncol(z.design.saturated)
###1 for intercept
total.covar.number <- 1+ baselineonly.number+additive.number+
pairwise.interaction.number+saturated.number
max.number.second.stage.parameter <- 0
if(baselineonly.number!=0){
max.number.second.stage.parameter <- baselineonly.second.cat
}
if(additive.number!=0){
max.number.second.stage.parameter <- additive.second.cat
}
if(pairwise.interaction.number!=0){
max.number.second.stage.parameter <- pairwise.interaction.second.cat
}
if(saturated.number!=0){
max.number.second.stage.parameter <- saturated.second.cat
}
second.stage.mat <- matrix(NA,max.number.second.stage.parameter,(total.covar.number-1))
delta.no.inter <- delta[(M+1):length(delta)]
ind.delta <- 0
ind.covar <- 0
if(baselineonly.number!=0){
baselineonly.second.stage.delta <- matrix(NA,max.number.second.stage.parameter,baselineonly.number)
baselineonly.second.stage.delta[1,(ind.covar+1):(ind.covar+baselineonly.number)] <- delta.no.inter[(ind.covar+1):(ind.covar+baselineonly.number)]
second.stage.mat[,(ind.covar+1):(ind.covar+baselineonly.number)]<- baselineonly.second.stage.delta
ind.covar <- ind.covar+baselineonly.number
ind.delta <- ind.delta + ind.covar*baselineonly.number
}
if(additive.number!=0){
for(i in 1:additive.number){
ind.covar <- ind.covar+1
second.stage.mat[1:additive.second.cat,ind.covar]<-
delta.no.inter[(ind.delta+1):(ind.delta+additive.second.cat)]
ind.delta <- ind.delta + additive.second.cat
}
}
if(pairwise.interaction.number!=0){
for(i in 1:pairwise.interaction.number){
ind.covar <- ind.covar+1
second.stage.mat[1:pairwise.interaction.second.cat,ind.covar]<-
delta.no.inter[(ind.delta+1):(ind.delta+pairwise.interaction.second.cat)]
ind.delta <- ind.delta + pairwise.interaction.second.cat
}
}
if(saturated.number!=0){
for(i in 1:saturated.number){
ind.covar <- ind.covar+1
second.stage.mat[1:saturated.second.cat,ind.covar]<-
delta.no.inter[(ind.delta+1):(ind.delta+saturated.second.cat)]
ind.delta <- ind.delta + saturated.second.cat
}
}
colnames(second.stage.mat) <- covar.names
second.stage.mat
colnames(second.stage.mat)
covar.names
colnames(x.all.mis1)
covar.names
colnames(x.all.mis1[,1])
gene <- x.all.mis1[,1]
colnames(gene)
names(gene)
names(x.all.mis1[,1])
names(gene)
names(gene) <- "gene"
names(gene)
gene <- x.all.mis1[,1]
load_all("/Users/zhangh24/GoogleDrive/bc2")
baselineonly = x.all.mis1[,1,drop=F]
Heter.result.G.Icog = EMmvpoly(y.pheno.mis1,baselineonly = x.all.mis1[,1,drop=F],additive = x.all.mis1[,8:10] ,pairwise.interaction = x.all.mis1[,2:4],saturated = x.all.mis1[,5:7],missingTumorIndicator = 888)
Heter.result.G.Icog[[3]]
rnorm(2,c(1,2))
y = rnorm(n,theta,sd=1)
simulate <- function(n){
theta <- rnorm(n)
y = rnorm(n,theta,sd=1)
return(y)
}
n <- 100
data <- simulate(n)
head(data)
post.mean <- function(y,sigma){
p.sigma <- sigma/(sigma+1)
p.mu <- y*p.sigma
return(mean(p.mu))
}
n <- 100
y <- simulate(n)
post.mean(y,1)
n <- 1000
y <- simulate(n)
post.mean(y,1)
n <- 10000
y <- simulate(n)
post.mean(y,1)
n <- 100000
y <- simulate(n)
post.mean(y,1)
n <- 100000
y <- simulate(n)
post.mean(y,2)
n <- 100000
y <- simulate(n)
post.mean(y,2)
Heter.result.G.Icog[[2]]
Heter.result.G.Icog[[3]]
row.names(Heter.result.G.Icog[[3]])
second.stage.test <- NULL
delta.no.inter <- delta[(M+1):length(delta)]
sigma.no.inter <- sigma[(M+1):length(delta),
(M+1):length(delta)]
dim(infor_obs)
dim(infor)
sigma <- solve(infor)
sigma.no.inter <- sigma[(M+1):length(delta),
(M+1):length(delta)]
IndividualHeterTest(delta.no.inter,
sigma.no.inter)
DisplayIndTestResult(delta.no.inter,
sigma.no.inter)
load_all("/Users/zhangh24/GoogleDrive/bc2")
DisplayIndTestResult(delta.no.inter,
sigma.no.inter)
logodds <- delta.no.inter
sigma <- sigma.no.inter
var.logodds <- diag(sigma)
logodds.low <- logodds-1.96*sqrt(var.logodds)
logodds.high <- logodds+1.96*sqrt(var.logodds)
odds <- exp(logodds)
odds.low <- exp(logodds.low)
odds.high <- exp(logodds.high)
places <- 2
odds <- round(odds,places)
odds.low <- round(odds.low,places)
odds.high <- round(odds.high,places)
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
load_all("/Users/zhangh24/GoogleDrive/bc2")
var.logodds <- diag(sigma)
logodds.low <- logodds-1.96*sqrt(var.logodds)
logodds.high <- logodds+1.96*sqrt(var.logodds)
odds <- exp(logodds)
odds.low <- exp(logodds.low)
odds.high <- exp(logodds.high)
places <- 2
odds <- round(odds,places)
odds.low <- round(odds.low,places)
odds.high <- round(odds.high,places)
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
load_all("/Users/zhangh24/GoogleDrive/bc2")
DisplayIndTestResult(delta.no.inter,
sigma.no.inter)
var.logodds <- diag(sigma)
logodds.low <- logodds-1.96*sqrt(var.logodds)
logodds.high <- logodds+1.96*sqrt(var.logodds)
odds <- exp(logodds)
odds.low <- exp(logodds.low)
odds.high <- exp(logodds.high)
places <- 2
odds <- round(odds,places)
odds.low <- round(odds.low,places)
odds.high <- round(odds.high,places)
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
IndividualHeterTest <- function(logodds,sigma){
sigma <- as.matrix(sigma)
var.logodds <- diag(sigma)
df <- length(logodds)
z <- logodds/sqrt(var.logodds)
p.value.IHT <- PvalueFunction(z)
p.value.IHT <- format(p.value.IHT,scientific = T, digits=3)
return(p.value.IHT)
}
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
sigma <- as.matrix(sigma)
var.logodds <- diag(sigma)
df <- length(logodds)
z <- logodds/sqrt(var.logodds)
p.value.IHT <- PvalueFunction(z)
p.value.IHT
p.value.IHT <- round(p.value.IHT,places)
p.value.IHT
p.value.IHT <- PvalueFunction(z)
p.value.IHT <- format(p.value.IHT,digits=3)
p.value.IHT
p.value.IHT <- PvalueFunction(z)
p.value.IHT
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.value.IHT <- PvalueFunction(z)
p.value.IHT
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.value.IHT <- PvalueFunction(z)
p.value.IHT
formatC(c(1,1.01),format = "e",digits=2)
formatC(c(1,1.01,0.05),format = "e",digits=2)
?formatC
noquote(formatC(c(1,1.01,0.05),format = "e",digits=2))
noquote(formatC(c(1,1.01,0.05),format = "e",digits=2))[1]
noquote(formatC(c(1,1.01,0.05),format = "e",digits=2))[2]
noquote(formatC(c(1,1.01,0.05),format = "e",digits=2))[3]
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.value.IHT <- PvalueFunction(z)
p.value.IHT
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.value.IHT <- PvalueFunction(z)
p.value.IHT
var.logodds <- diag(sigma)
logodds.low <- logodds-1.96*sqrt(var.logodds)
logodds.high <- logodds+1.96*sqrt(var.logodds)
odds <- exp(logodds)
odds.low <- exp(logodds.low)
odds.high <- exp(logodds.high)
places <- 2
odds <- round(odds,places)
odds.low <- round(odds.low,places)
odds.high <- round(odds.high,places)
p.individual.heter <- IndividualHeterTest(logodds,sigma)
result = NULL
for(i in 1:length(logodds)){
temp <- c(odds,odds.low,odds.high,p.individual.heter[i])
result= rbind(result,temp)
}
head(result)
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
sigma <- as.matrix(sigma)
var.logodds <- diag(sigma)
df <- length(logodds)
z <- logodds/sqrt(var.logodds)
p.value.IHT <- PvalueFunction(z)
places = 2
p.value.IHT <- format(p.value.IHT,digits=3,scientific = T)
p.value.IHT
sigma <- as.matrix(sigma)
var.logodds <- diag(sigma)
df <- length(logodds)
z <- logodds/sqrt(var.logodds)
p.value.IHT <- PvalueFunction(z)
p.value.IHT
IndividualHeterTest <- function(logodds,sigma){
sigma <- as.matrix(sigma)
var.logodds <- diag(sigma)
df <- length(logodds)
z <- logodds/sqrt(var.logodds)
p.value.IHT <- PvalueFunction(z)
return(p.value.IHT)
}
result = NULL
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
result = NULL
odds
odds.low
odds.high
for(i in 1:length(logodds)){
temp <- c(odds,odds.low,odds.high,p.individual.heter[i])
result= rbind(result,temp)
}
result
class(p.individual.heter)
p.individual.heter[1]+p.individual.heter[2]
PvalueFunction <- function(z){
result <- NULL
for(i in 1:length(z)){
result <- c(result,2*(pnorm(-abs(z[i]))))
}
result <- format(result,scientific =  T,digits=3)
return(result)
}
p.individual.heter <- IndividualHeterTest(logodds,sigma)
class(p.individual.heter)
load_all("/Users/zhangh24/GoogleDrive/bc2")
p.individual.heter <- IndividualHeterTest(logodds,sigma)
p.individual.heter
i1=1
library(devtools)
load_all("/Users/zhangh24/GoogleDrive/bc2")
data1 <- read.csv("./data/iCOGS_euro_v10_05242017.csv",header=T)
y.pheno.mis1 <- cbind(data1$Behaviour1,data1$PR_status1,data1$ER_status1,data1$HER2_status1,data1$Grade1)
colnames(y.pheno.mis1) = c("Behavior","PR","ER","HER2","Grade")
x.test.all.mis1 <- data1[,c(27:206)]
x.covar.mis1 <- data1[,5:14]
x.all.mis1 <- as.matrix(cbind(x.test.all.mis1[,i1],x.covar.mis1))
colnames(x.all.mis1)[1] <- "gene"
score.test.support.icog <- ScoreTestSupportMixedModel(
y.pheno.mis1,
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
attributes(score.test.support.icog)
head(score.test.support.icog[[5]])
load_all("/Users/zhangh24/GoogleDrive/bc2")
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
head(x.all.mix1[,1])
head(x.all.mis1)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
score.test.support.icog.mix <- ScoreTestSupportMixedModel(
y.pheno.mis1,
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
score.test.support.icog <- ScoreTestSupport(
y.pheno.mis1,
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
ScoreTest(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTest(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
score.test.support.icog <- ScoreTestSupportMixedModel(
y.pheno.mis1,
x.self.design = x.all.mis1[,1,drop=F],
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
load_all("/Users/zhangh24/GoogleDrive/bc2")
score.test.support.icog.mix <- ScoreTestSupportMixedModel(
y.pheno.mis1,
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
z.design <- matrix(c(
c(0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0),
c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0),
c(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0)
),ncol=5)
score.test.support.icog <- ScoreTestSupportMixedModel(
y.pheno.mis1,
x.self.design = x.all.mis1[,1,drop=F],
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
score.test.support.icog <- ScoreTestSupportMixedModel(
y.pheno.mis1,
z.design = z.design
x.self.design = x.all.mis1[,1,drop=F],
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
score.test.support.icog <- ScoreTestSupportMixedModel(
y.pheno.mis1,
z.design = z.design,
x.self.design = x.all.mis1[,1,drop=F],
baselineonly = NULL,
additive = x.all.mis1[,2:3],
pairwise.interaction = NULL,
saturated = NULL,
missingTumorIndicator = 888
)
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],second.stage.structure = "additive",score.test.support = score.test.support.icog,missingTumorIndicator = 888)
z.standard
Heter.result.Icog = EMmvpoly(y.pheno.mis1,baselineonly = NULL,additive = x.all.mis1[,2:3],pairwise.interaction = NULL,saturated = NULL,missingTumorIndicator = 888)
z.standard <- Heter.result.Icog[[12]]
z.standard
load_all("/Users/zhangh24/GoogleDrive/bc2")
ScoreTestMixedModel(y.pheno.mis1,x.all.mis1[,1,drop=F],z.standard,score.test.support = score.test.support.icog.mix,missingTumorIndicator = 888)
library(bc2)
install_github("andrewhaoyu/bc2", args = c('--library="/home/zhangh24/R/x86_64-pc-linux-gnu-library/3.4"'))
library(R.utils)
install.packages("R.utils")
library(R.utils)
