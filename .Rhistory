theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=20,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, size=10, vjust=1.25)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face="bold",vjust=0)) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
load(paste0("./multi_ethnic/result/LDP.result_",pop.ind))
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
LDP.result
LDP.result[[1]]
LDP.result[[2]]
LDP.result[[3]]
library(ggplot2)
colnames(data) <- c("Pthr","R2")
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
ggplot(data)+geom_point(aes(Pthr,R2))
ggplot(data)+geom_point(aes(-log10(Pthr),R2))
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()
library(RColorBrewer)
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")
library(ggplot2)
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
title("Prediction result on European people")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")
fte_theme <- function() {
library(RColorBrewer)
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[1]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=20,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, face="bold", vjust=1.25)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")
fte_theme <- function() {
library(RColorBrewer)
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[1]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=20,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, face="bold", vjust=0.5)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")
fte_theme <- function() {
library(RColorBrewer)
# Generate the colors for the chart procedurally with RColorBrewer
palette <- brewer.pal("Greys", n=9)
color.background = palette[1]
color.grid.major = palette[3]
color.axis.text = palette[6]
color.axis.title = palette[7]
color.title = palette[9]
# Begin construction of chart
theme_bw(base_size=9) +
# Set the entire chart region to a light gray color
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
# Format the grid
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
# Format the legend, but hide by default
theme(legend.position="none") +
theme(legend.background = element_rect(fill=color.background)) +
theme(legend.text = element_text(size=20,color=color.axis.title)) +
# Set title and axis labels, and format these and tick marks
theme(plot.title=element_text(color=color.title, face="bold", hjust = 0.5,vjust=0.5,size=14)) +
theme(axis.text.x=element_text(size=10,color=color.axis.text)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face="bold",vjust=1.25)) +
# Plot margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.35), "cm"))
}
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")
prs.mat2 <- LDP.result[[6]]
prs.mat3 <- LDP.result[[7]]
r2.test <- LDP.result[[3]]
n.snp <- 0
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= -log10(p.thr))
-log10(p.thr)
log10P <- -log10(p.thr)
log10P
log10P <- round(log10P,1)
log10P
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= log10P)
log10P
log10P[9] <- NA
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= log10P)
log10P
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
log10P
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on European people")+
scale_x_discrete(limit= log10P[1:9])
LDP.result[[1]]
LDP.result[[3]]
i <- 1
pop <- c("European",
"African",
"Latino")
png(paste0("./multi_ethnic/result/prediction_",pop[i]),width = 20, height=20,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," people")+
scale_x_discrete(limit= log10P[1:9])
})
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," population")+
scale_x_discrete(limit= log10P[1:9])
})
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle("Prediction result on ",pop[i]," population")+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result on ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result on ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
png(paste0("./multi_ethnic/result/prediction_",pop[i]),width = 20, height=20,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=15,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
20*0.618
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
r2.test
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
i <- 3
load(paste0("./multi_ethnic/result/LDP.result_",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
r2.test
n.snp.result
log10P
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
vad.r2
#goal: weighted combination of PRS methods
setwd('/spin1/users/zhangh24/breast_cancer_data_analysis')
cov(beta_train1,beta_train2)
#goal: plot prediction results
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/')
library(ggplot2)
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP.result_summary",i))
n.snp.result[i,] <- LDP.result[[1]]
prop.result[i,] <- LDP.result[[2]]
idx <- which.max(LDP.result[[3]])
vad.r2[i] <- LDP.result[[4]][idx]
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
i <- 1
load(paste0("./multi_ethnic/result/LDP.result_summary_",i))
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- LDP.result[[1]]
n.snp.result
n.snp.result[i,] <- round(LDP.result[[1]],0)
n.snp.result
prop.result[i,] <- round(LDP.result[[2]],2)
LDP.result[[3]]
LDP.result[[4]]
LDP.result[[5]]
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
vad.r2
#goal: plot prediction results
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis/')
library(ggplot2)
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
log10P <- -log10(p.thr)
log10P <- round(log10P,1)
n.cut <- length(p.thr)
prop.result <- matrix(0,3,n.cut)
n.snp.result <- matrix(0,3,n.cut)
vad.r2 <- rep(0,3)
pop <- c("European",
"African",
"Latino")
i <- 1
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
for(i in 1:3){
load(paste0("./multi_ethnic/result/LDP_summary_",i))
n.snp.result[i,] <- round(LDP.result[[1]],0)
prop.result[i,] <- round(LDP.result[[2]],2)
vad.r2[i] <- mean(LDP.result[[5]])
r2.test <- LDP.result[[3]]
data <- data.frame(p.thr,r2.test)
colnames(data) <- c("Pthr","R2")
png(paste0("./multi_ethnic/result/prediction_",pop[i],".png"),width = 20, height=12.36,unit = "cm",res = 300)
print({
ggplot(data)+geom_point(aes(-log10(Pthr),R2))+
fte_theme()+
xlab("-log10(P-value)")+
ylab("Adjusted R2")+
ggtitle(paste0("Prediction result for ",pop[i]," population"))+
scale_x_discrete(limit= log10P[1:9])
})
dev.off()
}
write.csv(n.snp.result,"./multi_ethnic/result/number_of_selected_SNP.csv")
write.csv(prop.result,"./multi_ethnic/result/causal_proportion.csv")
head(n.snp.mat)
setwd('/spin1/users/zhangh24/breast_cancer_data_analysis')
n.s <- 100
p.thr <- c(10^-8,10^-7,10^-6,10^-5,10^-4,10^-3,10^-2,0.1,0.3,0.5)
n.p <- length(p.thr)
n.snp.mat <- matrix(0,n.s,n.p)
prop.mat <- matrix(0,n.s,n.p)
r2.test.mat <- matrix(0,n.s,n.p)
r2.vad.mat <- matrix(0,n.s,n.p)
#the best testing threshold adjusted r2 on validation data
best.vad <- rep(0,n.s)
best.vad
vad.r2
