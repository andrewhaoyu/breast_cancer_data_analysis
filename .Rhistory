cimba_result_try <- cimba_result[idx.temp,]
#if the SNP don't have rs_id
#use the chr:position format
jdx <- which(c(1:nrow(cimba_result_try)%in%grep("rs",cimba_result_try$MarkerName))!=T)
cimba_result_try[jdx,1] <- paste0("chr",cimba_result_try$CHR,":",cimba_result_try$position)[jdx]
write.table(cimba_result_try,file = paste0("./discovery_SNP/result/locus_plot_data/cimba_result_plot",discovery_snp$SNP.ONCO[k],".txt"),sep="\t",col.names=T,row.names=F,quote=F)
k <- 29
idx.temp <- which(cimba_result$CHR==discovery_snp$CHR.x[k]&
cimba_result$position>= discovery_snp$Pos[k]-10^6&
cimba_result$position<= discovery_snp$Pos[k]+10^6)
cimba_result_try <- cimba_result[idx.temp,]
#if the SNP don't have rs_id
#use the chr:position format
jdx <- which(c(1:nrow(cimba_result_try)%in%grep("rs",cimba_result_try$MarkerName))!=T)
cimba_result_try[jdx,1] <- paste0("chr",cimba_result_try$CHR,":",cimba_result_try$position)[jdx]
write.table(cimba_result_try,file = paste0("./discovery_SNP/result/locus_plot_data/cimba_result_plot",discovery_snp$SNP.ONCO[k],".txt"),sep="\t",col.names=T,row.names=F,quote=F)
cimba_result_all <- as.data.frame(fread("./data/brca1_bcac_tn_meta.txt",header = T))
colnames(cimba_result_all)[10] <- "P"
cimba_result = cimba_result_all %>%
filter(Freq1>=0.008&
Freq1<=0.992&
CHR!=23) %>%
select(MarkerName,CHR,
position,P)
colnames(cimba_result) <- c("MarkerName",
"CHR",
"position",
"P.value")
#rs17215231
k <- 29
idx.temp <- which(cimba_result$CHR==discovery_snp$CHR.x[k]&
cimba_result$position>= discovery_snp$Pos[k]-10^6&
cimba_result$position<= discovery_snp$Pos[k]+10^6)
cimba_result_try <- cimba_result[idx.temp,]
#if the SNP don't have rs_id
#use the chr:position format
jdx <- which(c(1:nrow(cimba_result_try)%in%grep("rs",cimba_result_try$MarkerName))!=T)
cimba_result_try[jdx,1] <- paste0("chr",cimba_result_try$CHR,":",cimba_result_try$position)[jdx]
write.table(cimba_result_try,file = paste0("./discovery_SNP/result/locus_plot_data/cimba_result_plot",discovery_snp$SNP.ONCO[k],".txt"),sep="\t",col.names=T,row.names=F,quote=F)
#n total nodes observed
#x nodes are negative
BionomialBayes <- function(n,x){
return((x+1)/(n+2))
}
BionomialBayes(1,1)
BionomialBayes(0,0)
BionomialBayes(10,10)
BionomialBayes(10,5)
BionomialBayes(10,1)
29140260-500000
29140260+500000
145126177-500000
145126177+500000
-log10(9.6*10-9)
-log10(9.6*10^-9)
library(manhattan)
lirbary(qqman)
library(qqman)
?manhattan
#test mahattan plot package to see which one looks best
library(qqman)
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P" )
manhattan(gwasResults, chr="CHR", bp="BP", snp="SNP", p="P",ylim =c(0,12))
qq(gwasResults$P)
qq(gwasResults$P,ylim  = c(0,12))
8602+9414
91477+9494
get_cor_95 <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix.transform <- 0.5*log((1+correlation.matrix)/(1-correlation.matrix))
correlation.matrix.se.transform <- abs(correlation.matrix.se/((1+correlation.matrix)*(1-correlation.matrix)))
correlation.matrix.transform.low <- correlation.matrix.transform-1.96*correlation.matrix.se.transform
correlation.matrix.transform.high <- correlation.matrix.transform+1.96*correlation.matrix.se.transform
correlation.matrix.low <- (exp(2*correlation.matrix.transform.low)-1)/(exp(2*correlation.matrix.transform.low)+1)
correlation.matrix.high <- (exp(2*correlation.matrix.transform.high)-1)/(exp(2*correlation.matrix.transform.high)+1)
(exp(2*correlation.matrix.transform)-1)/(exp(2*correlation.matrix.transform)+1)
correlation.matrix <- round(correlation.matrix,places)
correlation.matrix.low <- round(correlation.matrix.low,places)
correlation.matrix.high <- round(correlation.matrix.high,places)
M <- nrow(correlation.matrix)
correlation.matrix.new <- rep("c",M^2)
temp <- 1
for(i in 1:M){
for(j in 1:M){
correlation.matrix.new[temp] <- paste0(correlation.matrix[i,j]," (",correlation.matrix.low[i,j],"-",correlation.matrix.high[i,j],")")
temp <- temp+1
}
}
correlation.matrix.new <- matrix(correlation.matrix.new,M,M)
return(correlation.matrix.new)
}
get_cor_95_list <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix.transform <- 0.5*log((1+correlation.matrix)/(1-correlation.matrix))
correlation.matrix.se.transform <- abs(correlation.matrix.se/((1+correlation.matrix)*(1-correlation.matrix)))
correlation.matrix.transform.low <- correlation.matrix.transform-1.96*correlation.matrix.se.transform
correlation.matrix.transform.high <- correlation.matrix.transform+1.96*correlation.matrix.se.transform
correlation.matrix.low <- (exp(2*correlation.matrix.transform.low)-1)/(exp(2*correlation.matrix.transform.low)+1)
correlation.matrix.high <- (exp(2*correlation.matrix.transform.high)-1)/(exp(2*correlation.matrix.transform.high)+1)
diag(correlation.matrix.se.transform) = 0.1
diag(correlation.matrix.transform) = 1000
correlation.matrix.se.transform = as.matrix(correlation.matrix.se.transform)
correlation.matrix.transform = as.matrix(correlation.matrix.transform)
p.value = 2*pnorm(abs(correlation.matrix.transform/correlation.matrix.se.transform),lower.tail = F)
return(list(correlation.matrix.low, correlation.matrix.high,p.value))
}
setwd('/Users/zhangh24/GoogleDrive/breast_cancer_data_analysis')
get_cor_95 <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix.transform <- 0.5*log((1+correlation.matrix)/(1-correlation.matrix))
correlation.matrix.se.transform <- abs(correlation.matrix.se/((1+correlation.matrix)*(1-correlation.matrix)))
correlation.matrix.transform.low <- correlation.matrix.transform-1.96*correlation.matrix.se.transform
correlation.matrix.transform.high <- correlation.matrix.transform+1.96*correlation.matrix.se.transform
correlation.matrix.low <- (exp(2*correlation.matrix.transform.low)-1)/(exp(2*correlation.matrix.transform.low)+1)
correlation.matrix.high <- (exp(2*correlation.matrix.transform.high)-1)/(exp(2*correlation.matrix.transform.high)+1)
(exp(2*correlation.matrix.transform)-1)/(exp(2*correlation.matrix.transform)+1)
correlation.matrix <- round(correlation.matrix,places)
correlation.matrix.low <- round(correlation.matrix.low,places)
correlation.matrix.high <- round(correlation.matrix.high,places)
M <- nrow(correlation.matrix)
correlation.matrix.new <- rep("c",M^2)
temp <- 1
for(i in 1:M){
for(j in 1:M){
correlation.matrix.new[temp] <- paste0(correlation.matrix[i,j]," (",correlation.matrix.low[i,j],"-",correlation.matrix.high[i,j],")")
temp <- temp+1
}
}
correlation.matrix.new <- matrix(correlation.matrix.new,M,M)
return(correlation.matrix.new)
}
get_cor_95_list <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix.transform <- 0.5*log((1+correlation.matrix)/(1-correlation.matrix))
correlation.matrix.se.transform <- abs(correlation.matrix.se/((1+correlation.matrix)*(1-correlation.matrix)))
correlation.matrix.transform.low <- correlation.matrix.transform-1.96*correlation.matrix.se.transform
correlation.matrix.transform.high <- correlation.matrix.transform+1.96*correlation.matrix.se.transform
correlation.matrix.low <- (exp(2*correlation.matrix.transform.low)-1)/(exp(2*correlation.matrix.transform.low)+1)
correlation.matrix.high <- (exp(2*correlation.matrix.transform.high)-1)/(exp(2*correlation.matrix.transform.high)+1)
diag(correlation.matrix.se.transform) = 0.1
diag(correlation.matrix.transform) = 1000
correlation.matrix.se.transform = as.matrix(correlation.matrix.se.transform)
correlation.matrix.transform = as.matrix(correlation.matrix.transform)
p.value = 2*pnorm(abs(correlation.matrix.transform/correlation.matrix.se.transform),lower.tail = F)
return(list(correlation.matrix.low, correlation.matrix.high,p.value))
}
getwd()
# load("./breast_cancer_ldsc/ICOG_ldsc_result.rda")
# load("./breast_cancer_ldsc/ONCO_ldsc_result.rda")
#load("./breast_cancer_ldsc/two-stage-model-intrinsic_subtype/meta_ldsc_result.rda")
#
#
#
##################only based on BCAC
places <- 3
load("./genetic_correlation/result/ldsc_result_meta_082919.rda")
correlation.matrix <- ldsc_result[[2]]
correlation.matrix.se <- ldsc_result[[4]]
correlation.matrix
correlation.matrix <- correlation.matrix[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
correlation.matrix.se <- correlation.matrix.se[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
correlation.95 <- get_cor_95(correlation.matrix,correlation.matrix.se)
names <- colnames(ldsc_result[[2]])[c(2,5,4,3,1,6)]
colnames(correlation.matrix) <- names
rownames(correlation.matrix) <- names
colnames(correlation.95) <- names
rownames(correlation.95) <- names
correlation.matrix.low <- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[1]]
correlation.matrix.high<- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[2]]
write.csv(correlation.95,file="./genetic_correlation/result/correlation_95_BCAC_CIMBA_082919.csv",quote=F)
correlation.matrix
get_cor_se <- function(correlation.matrix,correlation.matrix.se){
M <- nrow(correlation.matrix)
correlation.matrix.new <- rep("c",M^2)
temp <- 1
for(i in 1:M){
for(j in 1:M){
correlation.matrix.new[temp] <- paste0(correlation.matrix[i,j]," (",correlation.matrix.se[i,j],")")
temp <- temp+1
}
}
correlation.matrix.new <- matrix(correlation.matrix.new,M,M)
return(correlation.matrix.new)
}
correlation.se <- get_cor_se(correlation.matrix,correlation.matrix.se)
correlation.se
colnames(correlation.se) <- names
rownames(correlation.se) <- names
write.csv(correlation.se,file="./genetic_correlation/result/correlation_se_BCAC_CIMBA_083119.csv",quote=F)
get_cor_se <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix <- round(correlation.matrix,places)
correlation.matrix.se <- round(correlation.matrix.se,places)
M <- nrow(correlation.matrix)
correlation.matrix.new <- rep("c",M^2)
temp <- 1
for(i in 1:M){
for(j in 1:M){
correlation.matrix.new[temp] <- paste0(correlation.matrix[i,j]," (",correlation.matrix.se[i,j],")")
temp <- temp+1
}
}
correlation.matrix.new <- matrix(correlation.matrix.new,M,M)
return(correlation.matrix.new)
}
# load("./breast_cancer_ldsc/ICOG_ldsc_result.rda")
# load("./breast_cancer_ldsc/ONCO_ldsc_result.rda")
#load("./breast_cancer_ldsc/two-stage-model-intrinsic_subtype/meta_ldsc_result.rda")
#
#
#
##################only based on BCAC
places <- 2
correlation.matrix.se <- correlation.matrix.se[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
colnames(correlation.se) <- names
rownames(correlation.se) <- names
write.csv(correlation.se,file="./genetic_correlation/result/correlation_se_BCAC_CIMBA_083119.csv",quote=F)
correlation.se
get_cor_se <- function(correlation.matrix,correlation.matrix.se){
correlation.matrix <- round(correlation.matrix,places)
correlation.matrix.se <- round(correlation.matrix.se,places)
M <- nrow(correlation.matrix)
correlation.matrix.new <- rep("c",M^2)
temp <- 1
for(i in 1:M){
for(j in 1:M){
correlation.matrix.new[temp] <- paste0(correlation.matrix[i,j]," (",correlation.matrix.se[i,j],")")
temp <- temp+1
}
}
correlation.matrix.new <- matrix(correlation.matrix.new,M,M)
return(correlation.matrix.new)
}
correlation.se <- get_cor_se(correlation.matrix,correlation.matrix.se)
colnames(correlation.se) <- names
rownames(correlation.se) <- names
correlation.se
write.csv(correlation.se,file="./genetic_correlation/result/correlation_se_BCAC_CIMBA_083119.csv",quote=F)
correlation.matrix
p.value<- get_cor_95_list(correlation.matrix,correlation.matrix.se)[[3]]
M <- nrow(correlation.matrix)
combn.list <- combn(M,2)
n <- ncol(combn.list)
cor.vec.high <- cor.vec.low <- cor.vec <- rep(0,n)
subtypes <- rep("c",n)
names <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
for(i in n:1){
subtypes[i] <- paste0(names[combn.list[1,i]],
" vs ",
names[combn.list[2,i]])
cor.vec[i] <- correlation.matrix[combn.list[2,i],combn.list[1,i]]
cor.vec.low[i] <- correlation.matrix.low[combn.list[2,i],combn.list[1,i]]
cor.vec.high[i] <- correlation.matrix.high[combn.list[2,i],combn.list[1,i]]
}
subtypes.f <- factor(subtypes,levels=subtypes)
cor.data <-data.frame(subtypes.f,cor.vec,
cor.vec.low,
cor.vec.high)
cor.data <- cor.data[order(cor.data[,2]),]
cor.data[,1] <- factor(cor.data[,1],
levels=as.character(cor.data[,1]))
library(ggplot2)
ggplot(cor.data,aes(x=subtypes.f,y=cor.vec))+
geom_point(size=4)+
geom_errorbar(aes(ymax = cor.vec.high, ymin = cor.vec.low))+
theme_minimal()+  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylab("Genetic correlation") +
ggtitle("Genetic correlation between five intrinsic subtypes")  +
theme(text = element_text(size=18),plot.title = element_text(hjust = 0.5,face = "bold"),axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold.italic"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))+
xlab("Intrinsic subtypes")+
scale_y_continuous(limits=c(0,1))+
coord_flip()
library(dplyr)
library(reshape2)
library(ggplot2)
library(corrplot)
pal.breaks <- seq(0.5,1,0.01)
col <- colorRampPalette(c("white","red"))(length(pal.breaks)-1)
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
paletteLength <- 50
my.color <- colorRampPalette(c("white", "dodgerblue4"))(paletteLength)
myBreaks <- c(seq(0, max(correlation.matrix), length.out=floor(paletteLength)))
install.packages("corrplot")
library(corrplot)
pal.breaks <- seq(0.5,1,0.01)
col <- colorRampPalette(c("white","red"))(length(pal.breaks)-1)
# heatmap(correlation.matrix,col = col,symm=T,margins=c(10,4),key.title="",key.ylab="",cexRow=1,cexCol=1)
paletteLength <- 50
my.color <- colorRampPalette(c("white", "dodgerblue4"))(paletteLength)
myBreaks <- c(seq(0, max(correlation.matrix), length.out=floor(paletteLength)))
colnames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
rownames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
#corrplot.mixed(as.matrix(correlation.matrix),
#  lower.col = "black", number.cex = .7)
correlation.matrix <- correlation.matrix[c(3,2,1,4,5,6),c(3,2,1,4,5,6)]
correlation.matrix.se <- correlation.matrix.se[c(3,2,1,4,5,6),c(3,2,1,4,5,6)]
M <- 6
correlation.result <- matrix(rep("c",M^2),M,M)
for(i in 1:M){
for(j in 1:M){
correlation.result[i,j] <- paste0(
round(correlation.matrix[i,j],2)," (",
round(correlation.matrix.se[i,j],2),")")
}
}
colnames(correlation.result) <- colnames(correlation.matrix)
rownames(correlation.result) <- rownames(correlation.matrix)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
correlation.matrix
correlation.matrix
load("./genetic_correlation/result/ldsc_result_meta_082919.rda")
correlation.matrix <- ldsc_result[[2]]
correlation.matrix.se <- ldsc_result[[4]]
correlation.matrix <- correlation.matrix[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
correlation.matrix.se <- correlation.matrix.se[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
names <- colnames(ldsc_result[[2]])[c(2,5,4,3,1,6)]
correlation.95 <- get_cor_95(correlation.matrix,correlation.matrix.se)
correlation.se <- get_cor_se(correlation.matrix,correlation.matrix.se)
names <- colnames(ldsc_result[[2]])[c(2,5,4,3,1,6)]
colnames(correlation.matrix) <- names
rownames(correlation.matrix) <- names
correlation.matrix <- ldsc_result[[2]]
correlation.matrix.se <- ldsc_result[[4]]
correlation.matrix <- correlation.matrix[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
correlation.matrix.se <- correlation.matrix.se[c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
my.color <- colorRampPalette(c("white", "dodgerblue4"))(paletteLength)
myBreaks <- c(seq(0, max(correlation.matrix), length.out=floor(paletteLength)))
colnames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
rownames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
M <- 6
correlation.result <- matrix(rep("c",M^2),M,M)
for(i in 1:M){
for(j in 1:M){
correlation.result[i,j] <- paste0(
round(correlation.matrix[i,j],2)," (",
round(correlation.matrix.se[i,j],2),")")
}
}
colnames(correlation.result) <- colnames(correlation.matrix)
rownames(correlation.result) <- rownames(correlation.matrix)
correlation.result
write.csv(correlation.result,file="./genetic_correlation/result/plot_order_BCAC_CIMBA_gc.csv")
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
png(filename="./genetic_correlation/result/meta_heatmap_two_stage.png",width=10,heigh=10,units="in",res=600)
colnames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
rownames(correlation.matrix) <- c("Luminal A-like",
"Luminal B, HER2-negative-like",
"Luminal B-like ",
"HER2-enriched-like ",
"TN",
"CIMBA BRCA1")
#corrplot.mixed(as.matrix(correlation.matrix),
#  lower.col = "black", number.cex = .7)
# correlation.matrix <- correlation.matrix[c(3,2,1,4,5,6),c(3,2,1,4,5,6)]
# correlation.matrix.se <- correlation.matrix.se[c(3,2,1,4,5,6),c(3,2,1,4,5,6)]
M <- 6
correlation.result <- matrix(rep("c",M^2),M,M)
for(i in 1:M){
for(j in 1:M){
correlation.result[i,j] <- paste0(
round(correlation.matrix[i,j],2)," (",
round(correlation.matrix.se[i,j],2),")")
}
}
colnames(correlation.result) <- colnames(correlation.matrix)
rownames(correlation.result) <- rownames(correlation.matrix)
write.csv(correlation.result,file="./genetic_correlation/result/plot_order_BCAC_CIMBA_gc.csv")
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = .9, pch.col = "white"
)
# heatmap.2(correlation.matrix,tracecol=NA,cexRow=1,cexCol=1,margins=c(10,12),col = col,breaks=pal.breaks,key.ylab="",key.title = "",
#           main=" Genetic Correlation Heatmap",dendrogram="row",density.info="none",lwid = c(1.5,4))
dev.off()
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = 10, pch.col = "white"
)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = 10, pch.col = "white"
)
corrplot(as.matrix(correlation.matrix),
method = "circle",
#p.mat = p.value,
#insig = "label_sig",
#low=as.matrix(correlation.matrix.low),
#upp= as.matrix(correlation.matrix.high),
#rect.col = "navy", plotC = "rect", cl.pos = "n",
#col = my.color,
# method = "color",
tl.cex=1.2,
addrect=2,
order = "hclust",
tl.col = "black",
tl.srt = 30,
cl.lim = c(0, 1),
#sig.level = c(0.005,0.01,0.05),
pch.cex = 0.9, pch.col = "white"
)
ldsc_result
ldsc_result[[1]][c(2,5,4,3,1,6),c(2,5,4,3,1,6)]
diag(ldsc_result[[1]][c(2,5,4,3,1,6),c(2,5,4,3,1,6)])
ldsc_result[[1]]
write.csv(ldsc_result[[1]],file = "./data/BCAC_heritability.csv")
0.253496638/0.557
0.254/0.557
2750/2
3687-1375
