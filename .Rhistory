z.design = z.design,
z.design2 = z.design2,
x.self.design = cbind(agefftp_mat,
breast_mat
)[idx,],
x.self.design2 = cbind(parity_mat,
refage)[idx,],
missingTumorIndicator = 888)
install_github("andrewhaoyu/bc3")
library(bc2)
model <- EMmvpolySelfDesignnew(y=y[idx,],
z.design = z.design,
z.design2 = z.design2,
x.self.design = cbind(agefftp_mat,
breast_mat
)[idx,],
x.self.design2 = cbind(parity_mat,
refage)[idx,],
missingTumorIndicator = 888)
install_github("andrewhaoyu/bc3")
library(bc2)
model <- EMmvpolySelfDesignnew(y=y[idx,],
z.design = z.design,
z.design2 = z.design2,
x.self.design = cbind(agefftp_mat,
breast_mat
)[idx,],
x.self.design2 = cbind(parity_mat,
refage)[idx,],
missingTumorIndicator = 888)
library(bc2)
#data <- fread("./data/dataset_montse_20180522.txt")
setwd('/Users/haoyuzhang/GoogleDrive/breast_cancer_data_analysis (1)')
data <- fread("./data/Dataset_Montse_2018-10-10.txt")
##############we only focus on the invasive breast cancer cases
idx.invasive <- which(data$status==0|data$status==1)
data <- data[idx.invasive]
#############put the missing tumor characteristics as 888
idx.ER.mis <- which(data$status==1&is.na(data$ER_status1))
data$ER_status1[idx.ER.mis] <- 888
idx.PR.mis <- which(data$status==1&is.na(data$PR_status1))
data$PR_status1[idx.PR.mis] <- 888
idx.HER2.mis <- which(data$status==1&is.na(data$HER2_status1))
data$HER2_status1[idx.HER2.mis] <- 888
idx.grade.mis <- which(data$status==1&is.na(data$Grade1))
data$Grade1[idx.grade.mis] <- 888
#############put the subject BCAC-16687664 HER2 status as 1
idx <- which(data$HER2_status1==2)
data$HER2_status1[idx] <- 1
#############check the result
table(data$status,data$ER_status1)
table(data$status,data$PR_status1)
table(data$status,data$HER2_status1)
table(data$status,data$Grade1)
library(nnet)
############collapes breast mos cat 0,1
############collapes age fftp cat 0,1
data$breastmos_cat[data$breastmos_cat==0] <- 1
data$agefftp_cat[data$agefftp_cat==0] <- 1
###########create the dummy variable for breastmos_cat
###########create the dummy variable for parity_cat
###########create the dummy variable for agefftp_cat
breast_mat <- model.matrix(~as.factor(data$breastmos_cat)-1)[,-1]
colnames(breast_mat) <- paste0("breast_cat",c(2:5,9))
parity_mat <- model.matrix(~as.factor(data$parity_cat)-1)[,-1]
colnames(parity_mat) <- paste0("parity_cat",c(1:4,9))
agefftp_mat <- model.matrix(~as.factor(data$agefftp_cat)-1)[,-1]
colnames(agefftp_mat) <- paste0("agefftp",c(2:4,9))
refage <- data$refage
###########create the phenotype file
y <- cbind(data$status,data$ER_status1,data$PR_status1,
data$HER2_status1,data$Grade1)
colnames(y) <- c("casecontrol",
"ER",
"PR",
"HER2",
"Grade")
############don't adjust for study
############population based study
idx <- which(data$design_cat==0)
###########two-stage model based on population based study
model <- TwoStageModel(y=y[idx,],
additive = cbind(agefftp_mat,
breast_mat,
parity_mat,
refage)[idx,],
missingTumorIndicator = 888
)
z.design2 <- cbind(1,z.standard[,1])
z.design2
z.design <- matrix(c(
c(0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0),
c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0),
c(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0)
),ncol=5)
rowSums(z.design)
colnames(z.design) <- c("Luminal A","Luminal B",
"Luminal B HER2Neg",
"HER2 Enriched",
"Triple Negative")
idx <- which(data$design_cat==1)
model <- EMmvpolySelfDesignnew(y=y[idx,],
z.design = z.design,
z.design2 = z.design2,
x.self.design = cbind(agefftp_mat,
breast_mat
)[idx,],
x.self.design2 = cbind(parity_mat,
refage)[idx,],
missingTumorIndicator = 888)
############two-stage model with triple negative interaction
z.standard <- GenerateZstandard(y)
z.design2 <- cbind(1,z.standard[,1])
colnames(z.design2) <- c("baseline",
"ER")
idx <- which(data$design_cat==0)
z.design2 <- cbind(1,z.standard[,1])
colnames(z.design2) <- c("baseline",
"ER")
model <- EMmvpolySelfDesignnew(y=y[idx,],
z.design = z.design,
x.self.design = cbind(agefftp_mat,
breast_mat,
parity_mat,
refage)[idx,],
z.design2 = z.design2,
x.self.design2 = study_mat1,
missingTumorIndicator = 888)
dim(study_mat1)
length(idx)
#data <- fread("./data/dataset_montse_20180522.txt")
setwd('/Users/haoyuzhang/GoogleDrive/breast_cancer_data_analysis (1)')
data <- as.data.frame(fread("./data/Dataset_Montse_2018-10-10.txt"))
##############we only focus on the invasive breast cancer cases
idx.invasive <- which(data$status==0|data$status==1)
data <- data[idx.invasive,]
#############put the missing tumor characteristics as 888
idx.ER.mis <- which(data$status==1&is.na(data$ER_status1))
data$ER_status1[idx.ER.mis] <- 888
idx.PR.mis <- which(data$status==1&is.na(data$PR_status1))
data$PR_status1[idx.PR.mis] <- 888
idx.HER2.mis <- which(data$status==1&is.na(data$HER2_status1))
data$HER2_status1[idx.HER2.mis] <- 888
idx.grade.mis <- which(data$status==1&is.na(data$Grade1))
data$Grade1[idx.grade.mis] <- 888
#############put the subject BCAC-16687664 HER2 status as 1
idx <- which(data$HER2_status1==2)
data$HER2_status1[idx] <- 888
#############check the result
table(data$status,data$ER_status1)
table(data$status,data$PR_status1)
table(data$status,data$HER2_status1)
table(data$status,data$Grade1)
library(nnet)
############collapes breast mos cat 0,1
############collapes age fftp cat 0,1
data$breastmos_cat[data$breastmos_cat==0] <- 1
data$agefftp_cat[data$agefftp_cat==0] <- 1
###########create the dummy variable for breastmos_cat
###########create the dummy variable for parity_cat
###########create the dummy variable for agefftp_cat
breast_mat <- model.matrix(~as.factor(data$breastmos_cat)-1)[,-1]
colnames(breast_mat) <- paste0("breast_cat",c(2:5,9))
parity_mat <- model.matrix(~as.factor(data$parity_cat)-1)[,-1]
colnames(parity_mat) <- paste0("parity_cat",c(1:4,9))
agefftp_mat <- model.matrix(~as.factor(data$agefftp_cat)-1)[,-1]
colnames(agefftp_mat) <- paste0("agefftp",c(2:4,9))
refage <- data$refage
###########create the phenotype file
y <- cbind(data$status,data$ER_status1,data$PR_status1,
data$HER2_status1,data$Grade1)
colnames(y) <- c("casecontrol",
"ER",
"PR",
"HER2",
"Grade")
###########create study mat
idx <- which(data$design_cat==0)
study1 <- data[idx,2]
idx <- which(data$design_cat==1)
study2 <- data[idx,2]
study_mat1 <- model.matrix(~as.factor(study1)-1)[,-1]
study_mat2 <- model.matrix(~as.factor(study2)-1)[,-1]
############don't adjust for study
############population based study
idx <- which(data$design_cat==0)
#jdx <- which(data[idx,2]==study_names[5])
#apply(y[idx[jdx],],2,table)
model <- TwoStageModel(y=y[idx,],
baselineonly = study_mat1,
additive = cbind(agefftp_mat,
breast_mat,
parity_mat,
refage)[idx,],
missingTumorIndicator = 888
)
############two-stage model with triple negative interaction
z.standard <- GenerateZstandard(y)
############find triple negative row
idx <- which(z.standard[,1]==0&
z.standard[,2]==0&
z.standard[,3]==0)
z.triple <- rep(1,nrow(z.standard))
z.triple[idx] <- 0
z.design <- cbind(1,z.standard,z.triple)
colnames(z.design) <- c("baseline", "ER", "PR", "HER2", "grade",
"TN_interaction")
idx <- which(data$design_cat==0)
############two-stage model with intrinsic subtypes
z.design <- matrix(c(
c(0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0),
c(0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0),
c(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0)
),ncol=5)
rowSums(z.design)
colnames(z.design) <- c("Luminal A","Luminal B",
"Luminal B HER2Neg",
"HER2 Enriched",
"Triple Negative")
idx <- which(data$design_cat==0)
z.design2 <- cbind(1,z.standard[,1])
colnames(z.design2) <- c("baseline",
"ER")
model <- EMmvpolySelfDesignnew(y=y[idx,],
z.design = z.design,
x.self.design = cbind(agefftp_mat,
breast_mat,
parity_mat,
refage)[idx,],
z.design2 = z.design2,
x.self.design2 = study_mat1,
missingTumorIndicator = 888)
#data <- fread("./data/dataset_montse_20180522.txt")
setwd('/Users/haoyuzhang/GoogleDrive/breast_cancer_data_analysis (1)')
data <- as.data.frame(fread("./data/Dataset_Montse_2018-10-10.txt"))
##############we only focus on the invasive breast cancer cases
idx.invasive <- which(data$status==0|data$status==1)
data <- data[idx.invasive,]
#############put the missing tumor characteristics as 888
idx.ER.mis <- which(data$status==1&is.na(data$ER_status1))
data$ER_status1[idx.ER.mis] <- 888
idx.PR.mis <- which(data$status==1&is.na(data$PR_status1))
data$PR_status1[idx.PR.mis] <- 888
idx.HER2.mis <- which(data$status==1&is.na(data$HER2_status1))
data$HER2_status1[idx.HER2.mis] <- 888
idx.grade.mis <- which(data$status==1&is.na(data$Grade1))
data$Grade1[idx.grade.mis] <- 888
#############put the subject BCAC-16687664 HER2 status as 1
idx <- which(data$HER2_status1==2)
data$HER2_status1[idx] <- 888
#############check the result
table(data$status,data$ER_status1)
table(data$status,data$PR_status1)
table(data$status,data$HER2_status1)
table(data$status,data$Grade1)
library(nnet)
############collapes breast mos cat 0,1
############collapes age fftp cat 0,1
data$breastmos_cat[data$breastmos_cat==0] <- 1
data$agefftp_cat[data$agefftp_cat==0] <- 1
###########create the dummy variable for breastmos_cat
###########create the dummy variable for parity_cat
###########create the dummy variable for agefftp_cat
breast_mat <- model.matrix(~as.factor(data$breastmos_cat)-1)[,-1]
colnames(breast_mat) <- paste0("breast_cat",c(2:5,9))
parity_mat <- model.matrix(~as.factor(data$parity_cat)-1)[,-1]
colnames(parity_mat) <- paste0("parity_cat",c(1:4,9))
agefftp_mat <- model.matrix(~as.factor(data$agefftp_cat)-1)[,-1]
colnames(agefftp_mat) <- paste0("agefftp",c(2:4,9))
refage <- data$refage
###########create the phenotype file
y <- cbind(data$status,data$ER_status1,data$PR_status1,
data$HER2_status1,data$Grade1)
colnames(y) <- c("casecontrol",
"ER",
"PR",
"HER2",
"Grade")
###########create study mat
idx <- which(data$design_cat==0)
study1 <- data[idx,2]
idx <- which(data$design_cat==1)
study2 <- data[idx,2]
study_mat1 <- model.matrix(~as.factor(study1)-1)[,-1]
study_mat2 <- model.matrix(~as.factor(study2)-1)[,-1]
############don't adjust for study
############population based study
idx <- which(data$design_cat==0)
library(data.table)
library(bc2)
#library(bc3)
#data <- fread("./data/dataset_montse_20180522.txt")
setwd('/Users/haoyuzhang/GoogleDrive/breast_cancer_data_analysis (1)')
data <- as.data.frame(fread("./data/Dataset_Montse_2018-10-10.txt"))
##############we only focus on the invasive breast cancer cases
idx.invasive <- which(data$status==0|data$status==1)
data <- data[idx.invasive,]
##############take out all the people with missing parous
idx <- which(is.na(data$parous)!=T)
data <- data[idx,]
#############take out all the people with missing parity, breastmos, or agfftp
idx <- which((is.na(data$parity)!=T)&
is.na(data$breastMos)!=T&
is.na(data$ageFFTP)!=T)
data <- data[idx,]
#############put the missing tumor characteristics as 888
idx.ER.mis <- which(data$status==1&is.na(data$ER_status1))
data$ER_status1[idx.ER.mis] <- 888
idx.PR.mis <- which(data$status==1&is.na(data$PR_status1))
data$PR_status1[idx.PR.mis] <- 888
idx.HER2.mis <- which(data$status==1&is.na(data$HER2_status1))
data$HER2_status1[idx.HER2.mis] <- 888
idx.grade.mis <- which(data$status==1&is.na(data$Grade1))
data$Grade1[idx.grade.mis] <- 888
#############put the subject BCAC-16687664 HER2 status as 1
idx <- which(data$HER2_status1==2)
data$HER2_status1[idx] <- 888
#############check the result
table(data$status,data$ER_status1)
table(data$status,data$PR_status1)
table(data$status,data$HER2_status1)
table(data$status,data$Grade1)
library(nnet)
############collapes breast mos cat 0,1
############collapes age fftp cat 0,1
data$breastmos_cat[data$breastmos_cat==0] <- 1
data$agefftp_cat[data$agefftp_cat==0] <- 1
###########create the dummy variable for breastmos_cat
###########create the dummy variable for parity_cat
###########create the dummy variable for agefftp_cat
breast_mat <- model.matrix(~as.factor(data$breastmos_cat)-1)[,-1]
colnames(breast_mat) <- paste0("breast_cat",c(2:5,9))
parity_mat <- model.matrix(~as.factor(data$parity_cat)-1)[,-1]
colnames(parity_mat) <- paste0("parity_cat",c(1:4,9))
agefftp_mat <- model.matrix(~as.factor(data$agefftp_cat)-1)[,-1]
colnames(agefftp_mat) <- paste0("agefftp",c(2:4,9))
refage <- data$refage
agefftp <- data$ageFFTP
breastmos <- data$breastMos/6
parity <- data$parity
###########create the phenotype file
y <- cbind(data$status,data$ER_status1,data$PR_status1,
data$HER2_status1,data$Grade1)
colnames(y) <- c("casecontrol",
"ER",
"PR",
"HER2",
"Grade")
###########create study mat
idx <- which(data$design_cat==0)
study1 <- data[idx,2]
idx <- which(data$design_cat==1)
study2 <- data[idx,2]
study_mat1 <- model.matrix(~as.factor(study1)-1)[,-1]
study_mat2 <- model.matrix(~as.factor(study2)-1)[,-1]
############don't adjust for study
############population based study
idx <- which(data$design_cat==0)
study_names <- names(table(data[idx,2]))
z.standard <- GenerateZstandard(y)
############find triple negative row
idx <- which(z.standard[,1]==0&
z.standard[,2]==0&
z.standard[,3]==0)
z.triple <- rep(1,nrow(z.standard))
z.triple[idx] <- 0
z.design <- cbind(1,z.standard,z.triple)
colnames(z.design) <- c("baseline", "ER", "PR", "HER2", "grade",
"TN_interaction")
idx <- which(data$design_cat==0)
model <- EMmvpolySelfDesign(y=y[idx,],
z.design = z.design,
x.self.design = cbind(agefftp,
breastmos,
parity,
refage)[idx,],
baselineonly = study_mat1,
missingTumorIndicator = 888)
write.xlsx(model[[4]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_triple_study",
append = T)
write.xlsx(model[[5]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_test_triple_study",
append=T)
library(xlsx)
getwd()
write.xlsx(model[[4]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_triple_study",
append = T)
write.xlsx(model[[5]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_test_triple_study",
append=T)
write.xlsx(model[[4]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_tr_study_continous",
append = T)
write.xlsx(model[[5]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "pb_test_study_continous_tr",
append=T)
z.standard <- GenerateZstandard(y)
############find triple negative row
idx <- which(z.standard[,1]==0&
z.standard[,2]==0&
z.standard[,3]==0)
z.triple <- rep(1,nrow(z.standard))
z.triple[idx] <- 0
z.design <- cbind(1,z.standard,z.triple)
colnames(z.design) <- c("baseline", "ER", "PR", "HER2", "grade",
"TN_interaction")
idx <- which(data$design_cat==1)
model <- EMmvpolySelfDesign(y=y[idx,],
z.design = z.design,
x.self.design = cbind(agefftp,
breastmos,
parity,
refage)[idx,],
baselineonly = study_mat2,
missingTumorIndicator = 888)
write.xlsx(model[[4]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "npb_tr_continous",
append = T)
write.xlsx(model[[5]]
,file = "risk_factor_result_110118.xlsx",
sheetName = "npb_test_continous_tr",
append=T)
n <- 1000
Z <- rnorm(n)
X <- 0.5*Z+rnorm(n)
X2 <- 0.3*X+rnorm(n)
Y = 0.5*X+3*X2+rnorm(n)
lm(Y~X)
lm(Y~Z)
lm(X~X)
lm(X~Z)
model <- lm(Y~X)
model1 <- lm(Y~Z)
model2 <- lm(X~Z)
coef(model2)
coef(model1)/coef(model2)[2]
model <- lm(Y~X)
model1 <- lm(Y~Z)
model2 <- lm(X~Z)
coef(model1)/coef(model2)[2]
coef(model1)[2]/coef(model2)[2]
model <- lm(Y~X)
model1 <- lm(Y~Z)
summary(model1)
model2 <- lm(X~Z)
summary(model2)
summary(model)
model1 <- lm(Y~Z)
summary(model1)
model2 <- lm(X~Z)
summary(model2)
coef(model1)[2]/coef(model2)[2]
model4 <- lm(Y~X+X2)
model4 <- lm(Y~X+X2)
summary(model4)
cor(Z,X2)
n <- 10000
Z <- rnorm(n)
Z2 <- rnorm(n)
X <- 3*Z2+0.5*Z+rnorm(n)
X2 <- 0.3*Z2+rnorm(n)
Y = 0.5*X+3*X2+rnorm(n)
model <- lm(Y~X)
summary(model)
model1 <- lm(Y~Z)
summary(model1)
model2 <- lm(X~Z)
summary(model2)
coef(model1)[2]/coef(model2)[2]
model4 <- lm(Y~X+X2)
summary(model4)
n <- 50000
Z <- rnorm(n)
Z2 <- rnorm(n)
X <- 3*Z2+0.5*Z+rnorm(n)
X2 <- 0.3*Z2+rnorm(n)
Y = 0.5*X+3*X2+rnorm(n)
model <- lm(Y~X)
summary(model)
model1 <- lm(Y~Z)
summary(model1)
model2 <- lm(X~Z)
summary(model2)
coef(model1)[2]/coef(model2)[2]
model4 <- lm(Y~X+X2)
summary(model4)
sqrt9
sqrt(0.0638\)
sqrt(0.0638)
sample.data <- data.frame(onco.order,onco.order)
onco.order <- c(0,as.character(onco.order))
missing
rep(0,3)
rbinom(n,1,0.5)
n
?write.table
?grep
?merge
onco.order.new <- merge(onco.order,disease_onco)
